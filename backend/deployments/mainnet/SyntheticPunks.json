{
  "address": "0xaf9CE4B327A3b690ABEA6F78eCCBfeFFfbEa9FDf",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_assetsAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ensReverseAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "_getAttributes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "_tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "assets",
      "outputs": [
        {
          "internalType": "contract ISyntheticPunksAssets",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimMessage",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "claimOther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "layers",
          "type": "uint256[]"
        }
      ],
      "name": "generatePunkSVG",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_attributeId",
          "type": "uint256"
        }
      ],
      "name": "getAttribute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getAttributeCategories",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getAttributes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_messageHash",
          "type": "bytes32"
        }
      ],
      "name": "getEthSignedMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getGender",
      "outputs": [
        {
          "internalType": "enum SyntheticPunks.Gender",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "getMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getTokenID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "seed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "randomUint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_ethSignedMessageHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "recoverSigner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "splitSignature",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xfd08b691d12ff2cf05e7edccd2a311e124bffdfeb528d666c98221c93dd3d648",
  "receipt": {
    "to": null,
    "from": "0x3ce6543978f37315e047236139817c1f446300e5",
    "contractAddress": "0xaf9CE4B327A3b690ABEA6F78eCCBfeFFfbEa9FDf",
    "transactionIndex": 339,
    "gasUsed": "5262954",
    "logsBloom": "0x
    "blockHash": "0x96e24cd3545b0f1d6b7fbd942b0bdbd8da29928df7da350c6ede7c771927d6ba",
    "transactionHash": "0xfd08b691d12ff2cf05e7edccd2a311e124bffdfeb528d666c98221c93dd3d648",
    "logs": [],
    "blockNumber": 14199397,
    "cumulativeGasUsed": "27620109",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "Synthetic CryptoPunks",
    "sCRYPTOPUNKS",
    "0x852aC0A51C27670751499360935a739E11533Fe0",
    "0xf5a1635d136F53d3518F38B163CcCcDaeAd78EbA",
    "0x3671aE578E63FdF66ad4F3E12CC0c0d71Ac7510C"
  ],
  "numDeployments": 1,
  "solcInputHash": "a1f98460d199dd44251f6d75f2c25b1b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_assetsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ensReverseAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"_getAttributes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"_tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"contract ISyntheticPunksAssets\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimMessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"claimOther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"layers\",\"type\":\"uint256[]\"}],\"name\":\"generatePunkSVG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_attributeId\",\"type\":\"uint256\"}],\"name\":\"getAttribute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAttributeCategories\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAttributes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getGender\",\"outputs\":[{\"internalType\":\"enum SyntheticPunks.Gender\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getTokenID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ethSignedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"recoverSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"splitSignature\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SyntheticPunks.sol\":\"SyntheticPunks\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern, minimalist, and gas efficient ERC-721 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\n/// @dev Note that balanceOf does not revert if passed the zero address, in defiance of the ERC.\\nabstract contract ERC721 {\\n    /*///////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 indexed id);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 indexed id);\\n\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                          METADATA STORAGE/LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    function tokenURI(uint256 id) public view virtual returns (string memory);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                            ERC721 STORAGE                        \\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(uint256 => address) public ownerOf;\\n\\n    mapping(uint256 => address) public getApproved;\\n\\n    mapping(address => mapping(address => bool)) public isApprovedForAll;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(string memory _name, string memory _symbol) {\\n        name = _name;\\n        symbol = _symbol;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC721 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 id) public virtual {\\n        address owner = ownerOf[id];\\n\\n        require(msg.sender == owner || isApprovedForAll[owner][msg.sender], \\\"NOT_AUTHORIZED\\\");\\n\\n        getApproved[id] = spender;\\n\\n        emit Approval(owner, spender, id);\\n    }\\n\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        isApprovedForAll[msg.sender][operator] = approved;\\n\\n        emit ApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        require(from == ownerOf[id], \\\"WRONG_FROM\\\");\\n\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(\\n            msg.sender == from || msg.sender == getApproved[id] || isApprovedForAll[from][msg.sender],\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n\\n        // Underflow of the sender's balance is impossible because we check for\\n        // ownership above and the recipient's balance can't realistically overflow.\\n        unchecked {\\n            balanceOf[from]--;\\n\\n            balanceOf[to]++;\\n        }\\n\\n        ownerOf[id] = to;\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(from, to, id);\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC165 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function supportsInterface(bytes4 interfaceId) public pure virtual returns (bool) {\\n        return\\n            interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165\\n            interfaceId == 0x80ac58cd || // ERC165 Interface ID for ERC721\\n            interfaceId == 0x5b5e139f; // ERC165 Interface ID for ERC721Metadata\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 id) internal virtual {\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(ownerOf[id] == address(0), \\\"ALREADY_MINTED\\\");\\n\\n        // Counter overflow is incredibly unrealistic.\\n        unchecked {\\n            balanceOf[to]++;\\n        }\\n\\n        ownerOf[id] = to;\\n\\n        emit Transfer(address(0), to, id);\\n    }\\n\\n    function _burn(uint256 id) internal virtual {\\n        address owner = ownerOf[id];\\n\\n        require(ownerOf[id] != address(0), \\\"NOT_MINTED\\\");\\n\\n        // Ownership check above ensures no underflow.\\n        unchecked {\\n            balanceOf[owner]--;\\n        }\\n\\n        delete ownerOf[id];\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(owner, address(0), id);\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL SAFE MINT LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _safeMint(address to, uint256 id) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function _safeMint(\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n}\\n\\n/// @notice A generic interface for a contract which properly accepts ERC721 tokens.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\ninterface ERC721TokenReceiver {\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xf97378ab999188b3d5d97037fabbecbc726892c74cba6536899b852eb4756d6a\",\"license\":\"AGPL-3.0-only\"},\"contracts/SyntheticPunks.sol\":{\"content\":\"\\n//  ______     __  __     __   __     ______   __  __     ______     ______   __     ______        ______   __  __     __   __     __  __     ______    \\n// /\\\\  ___\\\\   /\\\\ \\\\_\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\__  _\\\\ /\\\\ \\\\_\\\\ \\\\   /\\\\  ___\\\\   /\\\\__  _\\\\ /\\\\ \\\\   /\\\\  ___\\\\      /\\\\  == \\\\ /\\\\ \\\\/\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\ \\\\/ /    /\\\\  ___\\\\   \\n// \\\\ \\\\___  \\\\  \\\\ \\\\____ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\/_/\\\\ \\\\/ \\\\ \\\\  __ \\\\  \\\\ \\\\  __\\\\   \\\\/_/\\\\ \\\\/ \\\\ \\\\ \\\\  \\\\ \\\\ \\\\____     \\\\ \\\\  _-/ \\\\ \\\\ \\\\_\\\\ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\ \\\\  _\\\"-.  \\\\ \\\\___  \\\\  \\n//  \\\\/\\\\_____\\\\  \\\\/\\\\_____\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_____\\\\    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\  \\\\ \\\\_____\\\\     \\\\ \\\\_\\\\    \\\\ \\\\_____\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\/\\\\_____\\\\ \\n//   \\\\/_____/   \\\\/_____/   \\\\/_/ \\\\/_/     \\\\/_/   \\\\/_/\\\\/_/   \\\\/_____/     \\\\/_/   \\\\/_/   \\\\/_____/      \\\\/_/     \\\\/_____/   \\\\/_/ \\\\/_/   \\\\/_/\\\\/_/   \\\\/_____/ \\n                                                                                                                                                     \\n\\n// ................................................................................\\n// .....................................,,,........................................\\n// ...............................,,,,,,,,,,,,,,,..................................\\n// ............................,7777777777777777777,...............................\\n// .........................,,,,7777777777777777777,,,,............................\\n// ......................,,,,777~~~~~~~~~~~~~~~~~~~777,,,..........................\\n// ....................,,,,,:777,,,,,,,,,,,,,,,,,,,III:,,,,,.......................\\n// ..................,,,,=III~~~,,,,,,,,,,,,,,,,,,,~~~III=,,,,.....................\\n// .................,,,,,=III:::::::::::::::::::::::::III=,,,,,....................\\n// ................,,,777777777777777777777777777777777777777,,,...................\\n// ...............,,,,777777777777777777777777777777777777777,,,...................\\n// ................,,,777777777777777777777777777777777777777,,,...................\\n// ................,,,777777777777777777777777777777777777777,,,...................\\n// ................,,,===?II?=~~~~~~~~~~~~~~~~~~~~~~~~777+~~~,,,...................\\n// ................,,,,,,?III::,,,,,,,,,,,,,,,,,,,,,::777=,,,,,....................\\n// .................,,,,,IIII,,,,,,,,,,,,,,,,,,,,,,,,,777=,,,,,....................\\n// .................,,,,,I77I,,,,,..............,,,,,,777=,,,,.....................\\n// .................,,777===~,,,,................,,,,,777=,,,......................\\n// .................,,777~,,,,,,..................,,,,777=,,.......................\\n// .................,,777~,,,,,,777.............7II,,,777=,,.......................\\n// .................,,777~,,,,,,777,............777,,,777=,,.......................\\n// .................,,777?777,,,===,............===,,,777=,,.......................\\n// .................,,777?777,,,.................,,,,,777=,,.......................\\n// .................,,=+=+777,,,.................,,,,,777=,,.......................\\n// ..................,,,,+777,,,.................,,,,,777=,,.......................\\n// ..................,,,,+777,,,.........=777....,,,,,777=,,.......................\\n// ...................,,,=777,,,.........+777..,,,,,,,777=,,.......................\\n// ...................,,,+777,,,,.......,~++=,,,,,,,,,777=,,.......................\\n// ....................,,+777,,,,.....,,,,,,,,,,,,,,,,777=,,.......................\\n// .....................,=777,,,,,,,,,I777777777,,,,,,777=,........................\\n// .....................,+777,,,,,,,,,I777777777,,,,,,777=,........................\\n// .....................,=+++~~~,,,,,,=+++++++++,,,~~~+++~.........................\\n// ......................,,,:777,,,,,,,,,,,,,,,,,,,777:,,..........................\\n// ......................,,,:777,,,:::,,,,,,,,,,:::III:,...........................\\n// ......................,,,:777,,,777:,,,,,,,,:777,,,.............................\\n// ......................,,,:777,,,777~,,,,,,,,:777,,,.............................\\n// ......................,,,:777,,,,,,III?77?777,,,,...............................\\n// ......................,,,:777,,,,,,III?77?77I,,,,...............................\\n// .......................,,:777,,,,,,,,,:77?,,,,,.................................\\n// .......................,,,777,,,,,,,,,:77?,,,,..................................\\n// .........................,???,,,,,,,,,:??=,,,...................................\\n// ............................,.........,,,.,.....................................\\n// ................................................................................\\n\\n//SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"@rari-capital/solmate/src/tokens/ERC721.sol\\\";\\nimport \\\"./interfaces/ISyntheticPunksAssets.sol\\\";\\n\\nabstract contract ReverseRecords {\\n  function getNames(address[] calldata addresses) external view virtual returns (string[] memory r);\\n}\\n\\ncontract SyntheticPunks is ERC721 {\\n\\n  ISyntheticPunksAssets public assets;\\n  uint256 public immutable claimPrice = 0.02 ether;\\n  address public immutable withdrawAddress;\\n  address immutable ensReverseAddress;\\n  string public constant claimMessage = \\\"Message to claim Synthetic Punk\\\";\\n\\n  mapping(address => bool) public claimed;\\n\\n  enum Gender { Male, Female }\\n\\n  constructor(\\n    string memory _name, \\n    string memory _symbol, \\n    address _assetsAddress,\\n    address _withdrawAddress,\\n    address _ensReverseAddress\\n  ) ERC721(_name, _symbol) {\\n    assets = ISyntheticPunksAssets(_assetsAddress);\\n    withdrawAddress = _withdrawAddress;\\n    ensReverseAddress = _ensReverseAddress;\\n  }\\n\\n  function claim() public payable {\\n    require(msg.value >= claimPrice, \\\"Insufficient payment\\\");\\n    _safeMint(msg.sender, getTokenID(msg.sender));\\n    claimed[msg.sender] = true;\\n    uint256 refund = msg.value - claimPrice;\\n    if (refund > 0) {\\n      payable(msg.sender).transfer(refund);\\n    }\\n  }\\n\\n  function claimOther(address _signer, bytes memory _signature) public payable {\\n    require(msg.value >= claimPrice, \\\"Insufficient payment\\\");\\n    require(verify(_signer, claimMessage, _signature), \\\"Invalid signature\\\");\\n\\n    _safeMint(msg.sender, getTokenID(_signer));\\n    claimed[_signer] = true;\\n    uint256 refund = msg.value - claimPrice;\\n    if (refund > 0) {\\n      payable(_signer).transfer(refund);\\n    }\\n  }\\n\\n  \\n\\n  function withdraw() public {\\n    payable(withdrawAddress).transfer(address(this).balance);\\n  }\\n\\n  function _tokenURI(address _address) public view returns (string memory) {\\n    return tokenURI(getTokenID(_address));\\n  }\\n\\n  function getTokenID(address _address) public pure returns (uint256) {\\n    return uint256(uint160(_address));\\n  }\\n\\n  function getAddress(uint256 id) public pure returns (address) {\\n    return address(uint160(id));\\n  }\\n\\n  function tokenURI(uint256 id) public view override returns (string memory) {\\n    uint256[] memory layers = getAttributes(id);\\n    string memory punkSVG = generatePunkSVG(layers);\\n\\n    address userAddress = getAddress(id);\\n    string memory ensName = reverseName(userAddress);  \\n    string memory addressOrENS = bytes(ensName).length == 0 ? truncateAddress(userAddress) : ensName;\\n    string memory addressFullorENS = bytes(ensName).length == 0 ? toString(userAddress) : ensName;\\n    \\n    string memory json = base64(bytes(abi.encodePacked('{\\\"name\\\": \\\"', 'Synthetic CryptoPunk for ', addressOrENS, '\\\", \\\"description\\\": \\\"This is a unique Punk claimed by ', addressFullorENS,'.\\\", \\\"image\\\": \\\"data:image/svg+xml;base64,', base64(bytes(punkSVG)), '\\\"}')));\\n\\n    return string(abi.encodePacked('data:application/json;base64,', json));\\n  }\\n\\n  // Entropy 0\\n  function getGender(uint256 id) public view returns (Gender) {\\n    return randomUint(id, 0) % 2 == 0 ? Gender.Male : Gender.Female;\\n  }\\n\\n  // Entropy 1,2-9\\n  function getAttributeCategories(uint256 id) public view returns (uint256[] memory) {\\n    uint256[4][9] memory spritesheetRanges = assets.spritesheetRanges();\\n    uint256 checks = 2 + randomUint(id, 1) % (spritesheetRanges.length - 3); // Number of bytes to check\\n    uint256[] memory attributes = new uint256[](checks);\\n    uint256 length = 0;\\n    for (uint256 i; i < checks; i++) {\\n      uint256 newAttribute = randomUint(id, 2+i) % (spritesheetRanges.length - 2) + 1; // Skip base category\\n      \\n      bool added = contains(attributes, newAttribute);\\n\\n      if (added) {\\n        continue;\\n      }\\n\\n      if (getGender(id) == Gender.Female) {\\n        if (!(spritesheetRanges[newAttribute][3] - spritesheetRanges[newAttribute][1] == 0)) {\\n          attributes[length] = newAttribute;\\n          length++;\\n        }\\n      } else {\\n        if (!(spritesheetRanges[newAttribute][2] - spritesheetRanges[newAttribute][0] == 0)) {\\n          attributes[length] = newAttribute;\\n          length++;\\n        }\\n      }\\n    }\\n\\n    uint256[] memory attributesResized = new uint256[](length+1);\\n    attributesResized[0] = 0;\\n    for (uint256 i; i < length; i++) {\\n      attributesResized[i+1] = attributes[i];\\n    }\\n\\n    return attributesResized;\\n  }\\n\\n  // Entropy 10\\n  function getAttribute(uint256 id, uint256 _attributeId) public view returns (uint256) {\\n    uint256[4] memory ranges = assets.spritesheetRanges()[_attributeId];\\n    Gender gender = getGender(id);\\n    if (gender == Gender.Female) {\\n      return ranges[1] + randomUint(id, 10+_attributeId) % (ranges[3] - ranges[1]);\\n    } else {\\n      return ranges[0] + randomUint(id, 10+_attributeId) % (ranges[2] - ranges[0]);\\n    }\\n  }\\n\\n  function _getAttributes(address _address) public view returns (uint256[] memory) {\\n    return getAttributes(getTokenID(_address));\\n  }\\n\\n  function getAttributes(uint256 id) public view returns (uint256[] memory) {\\n    uint256[] memory attributeCategories = getAttributeCategories(id);\\n    uint256[] memory layers = new uint256[](attributeCategories.length);\\n    for (uint256 i = 0; i < attributeCategories.length; i++) {\\n      layers[i] = getAttribute(id, attributeCategories[i]);\\n    }\\n    return layers;\\n  }\\n\\n  function generatePunkSVG(uint256[] memory layers) public view returns (string memory) {\\n    string memory start1 = '<svg viewBox=\\\"0 0 24 24\\\" width=\\\"1000\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" ><defs><style>#spritesheet { image-rendering: -webkit-optimize-contrast; image-rendering: crisp-edges; image-rendering: pixelated; } svg { background : #1A1A1A; }</style><svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"48 0 24 24\\\"><image id=\\\"spritesheet\\\" preserveAspectRatio=\\\"xMinYMin slice\\\" href=\\\"';\\n    string memory start3 = '\\\"></image></svg></defs><svg id=\\\"punk\\\">';\\n    string memory end = '</svg></svg>';\\n    string memory layersSVG = '';\\n\\n    // Render in order\\n    for (uint256 i = 0; i < assets.spritesheetRanges().length; i++) {\\n      for (uint256 j = 0; j < layers.length; j++) {\\n        if (assets.spritesheetRanges()[i][0] <= layers[j] && layers[j] < assets.spritesheetRanges()[i][3]) { // if layer is in range\\n          uint256 id = layers[j];\\n          uint256 x = (id % 24) * 24;\\n          uint256 y = (id / 24) * 24;\\n          layersSVG = string(abi.encodePacked(layersSVG, '<svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"', toString(x), ' ', toString(y), ' 24 24\\\"><use href=\\\"#spritesheet\\\"></use></svg>'));\\n          break;\\n        }\\n      }\\n    }\\n\\n    return string(abi.encodePacked(start1, assets.spritesheetImageData(), start3, layersSVG, end)) ;\\n  }\\n  \\n  function reverseName(address _address) internal view returns (string memory name) {\\n    if (address(0) == ensReverseAddress) {\\n      return name;\\n    }\\n    ReverseRecords ens = ReverseRecords(ensReverseAddress);\\n    address[] memory t = new address[](1);\\n    t[0] = _address;\\n    name = ens.getNames(t)[0];\\n  }\\n\\n  function contains(uint256[] memory arr, uint256 element) internal pure returns (bool) {\\n    for (uint256 i = 0; i < arr.length; i++) {\\n      if (arr[i] == element) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n\\n  function randomUint(uint256 seed, uint256 offset) public view returns (uint256) {\\n    require(offset < 32, \\\"Offset out of bounds\\\");\\n    bytes32 entropy = keccak256(abi.encodePacked(address(this), seed));\\n    bytes32 mask = bytes32(0xff << (offset * 8));\\n    uint256 out = uint256((entropy & mask) >> (offset * 8));\\n    return out;\\n  }\\n\\n  function truncateAddress(address _address) internal pure returns (string memory) {\\n    string memory addressString = toString(_address);\\n    bytes memory addressBytes = bytes(addressString);\\n    bytes memory str = new bytes(13);\\n    uint count = 0;\\n    for (uint i = 0; i < 6; i++) {\\n      str[count++] = addressBytes[i];\\n    }\\n    for (uint256 i = 0; i < 3; i++) {\\n      str[count++] = \\\".\\\";\\n    }\\n    for (uint i = addressBytes.length-4; i < addressBytes.length; i++) {\\n      str[count++] = addressBytes[i];\\n    }\\n\\n    return string(str);\\n  }\\n\\n  function toString(address account) internal pure returns(string memory) {\\n    return toString(abi.encodePacked(account));\\n  }\\n\\n  function toString(bytes32 value) internal pure returns(string memory) {\\n    return toString(abi.encodePacked(value));\\n  }\\n\\n  function toString(bytes memory data) internal pure returns(string memory) {\\n    bytes memory alphabet = \\\"0123456789abcdef\\\";\\n\\n    bytes memory str = new bytes(2 + data.length * 2);\\n    str[0] = \\\"0\\\";\\n    str[1] = \\\"x\\\";\\n    for (uint i = 0; i < data.length; i++) {\\n        str[2+i*2] = alphabet[uint(uint8(data[i] >> 4))];\\n        str[3+i*2] = alphabet[uint(uint8(data[i] & 0x0f))];\\n    }\\n    return string(str);\\n  }\\n\\n  function toString(uint256 n) \\n      internal \\n      pure \\n      returns (string memory nstr) \\n  {\\n    uint256 MAX_UINT256_STRING_LENGTH = 78;\\n    uint8 ASCII_DIGIT_OFFSET = 48;\\n    if (n == 0) {\\n        return \\\"0\\\";\\n    }\\n    // Overallocate memory\\n    nstr = new string(MAX_UINT256_STRING_LENGTH);\\n    uint256 k = MAX_UINT256_STRING_LENGTH;\\n    // Populate string from right to left (lsb to msb).\\n    while (n != 0) {\\n      assembly {\\n        let char := add(\\n          ASCII_DIGIT_OFFSET,\\n          mod(n, 10)\\n        )\\n        mstore(add(nstr, k), char)\\n        k := sub(k, 1)\\n        n := div(n, 10)\\n      }\\n    }\\n    assembly {\\n      // Shift pointer over to actual start of string.\\n      nstr := add(nstr, k)\\n      // Store actual string length.\\n      mstore(nstr, sub(MAX_UINT256_STRING_LENGTH, k))\\n    }\\n    return nstr;\\n  }\\n\\n  /// @notice Encodes some bytes to the base64 representation\\n  function base64(bytes memory data) internal pure returns (string memory) {\\n    bytes memory TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n    uint256 len = data.length;\\n    if (len == 0) return \\\"\\\";\\n\\n    // multiply by 4/3 rounded up\\n    uint256 encodedLen = 4 * ((len + 2) / 3);\\n\\n    // Add some extra buffer at the end\\n    bytes memory result = new bytes(encodedLen + 32);\\n\\n    bytes memory table = TABLE;\\n\\n    assembly {\\n      let tablePtr := add(table, 1)\\n      let resultPtr := add(result, 32)\\n\\n      for {\\n        let i := 0\\n      } lt(i, len) {\\n\\n      } {\\n        i := add(i, 3)\\n        let input := and(mload(add(data, i)), 0xffffff)\\n\\n        let out := mload(add(tablePtr, and(shr(18, input), 0x3F)))\\n        out := shl(8, out)\\n        out := add(out, and(mload(add(tablePtr, and(shr(12, input), 0x3F))), 0xFF))\\n        out := shl(8, out)\\n        out := add(out, and(mload(add(tablePtr, and(shr(6, input), 0x3F))), 0xFF))\\n        out := shl(8, out)\\n        out := add(out, and(mload(add(tablePtr, and(input, 0x3F))), 0xFF))\\n        out := shl(224, out)\\n\\n        mstore(resultPtr, out)\\n\\n        resultPtr := add(resultPtr, 4)\\n      }\\n\\n      switch mod(len, 3)\\n      case 1 {\\n          mstore(sub(resultPtr, 2), shl(240, 0x3d3d))\\n      }\\n      case 2 {\\n          mstore(sub(resultPtr, 1), shl(248, 0x3d))\\n      }\\n\\n      mstore(result, encodedLen)\\n    }\\n\\n    return string(result);\\n  }\\n\\n  // ECDSA\\n\\n  function getMessageHash(\\n    string memory _message\\n  ) public pure returns (bytes32) {\\n    return keccak256(abi.encodePacked(_message));\\n  }\\n\\n  function getEthSignedMessageHash(bytes32 _messageHash)\\n    public\\n    pure \\n    returns (bytes32)\\n  {\\n    return\\n      keccak256(\\n        abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", _messageHash)\\n      );\\n  }\\n\\n  function verify(\\n    address _signer,\\n    string memory _message,\\n    bytes memory signature\\n  ) public pure returns (bool) {\\n    bytes32 messageHash = getMessageHash(_message);\\n    bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash);\\n\\n    return recoverSigner(ethSignedMessageHash, signature) == _signer;\\n  }\\n\\n  function recoverSigner(bytes32 _ethSignedMessageHash, bytes memory _signature)\\n    public\\n    pure\\n    returns (address)\\n  {\\n    (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature);\\n\\n    return ecrecover(_ethSignedMessageHash, v, r, s);\\n  }\\n\\n  function splitSignature(bytes memory sig)\\n    public\\n    pure\\n    returns (\\n        bytes32 r,\\n        bytes32 s,\\n        uint8 v\\n    )\\n  {\\n    require(sig.length == 65, \\\"invalid signature length\\\");\\n\\n    assembly {\\n      // first 32 bytes, after the length prefix\\n      r := mload(add(sig, 32))\\n      // second 32 bytes\\n      s := mload(add(sig, 64))\\n      // final byte (first byte of the next 32 bytes)\\n      v := byte(0, mload(add(sig, 96)))\\n    }\\n  }\\n}\",\"keccak256\":\"0x48227abf74900e32759f09197c3954b92361a62a857c150e9594e124706058ce\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ISyntheticPunksAssets.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.0;\\n\\ninterface ISyntheticPunksAssets {\\n  function spritesheetImageData() external view returns (string memory);\\n  function spritesheetRanges() external view returns (uint256[4][9] memory);\\n  function attributesContentURI() external view returns (string memory);\\n}\",\"keccak256\":\"0x8d122d962831b0c599affa0587fb81aac33e21ccef08b36563c7db7576944c28\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 28,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 30,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 41,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "balanceOf",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 45,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "ownerOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 49,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "getApproved",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 55,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "isApprovedForAll",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 534,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "assets",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(ISyntheticPunksAssets)1957"
      },
      {
        "astId": 548,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "claimed",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ISyntheticPunksAssets)1957": {
        "encoding": "inplace",
        "label": "contract ISyntheticPunksAssets",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}