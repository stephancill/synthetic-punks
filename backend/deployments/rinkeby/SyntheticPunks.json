{
  "address": "0x0BdccfbfB9AC1EBd71d65360D0F65581146c33EB",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_assetsAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ensReverseAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "_getAttributes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "_tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "assets",
      "outputs": [
        {
          "internalType": "contract ISyntheticPunksAssets",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimMessage",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "claimOther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "layers",
          "type": "uint256[]"
        }
      ],
      "name": "generatePunkSVG",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_attributeId",
          "type": "uint256"
        }
      ],
      "name": "getAttribute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getAttributeCategories",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getAttributes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_messageHash",
          "type": "bytes32"
        }
      ],
      "name": "getEthSignedMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getGender",
      "outputs": [
        {
          "internalType": "enum SyntheticPunks.Gender",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "getMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getTokenID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "seed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "randomUint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_ethSignedMessageHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "recoverSigner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "splitSignature",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xcacedb3d95f4ab22472e410ea2a9c8660b2b40ef25dc75ac2ce0a7c01a4bd520",
  "receipt": {
    "to": null,
    "from": "0xCC78016816633528Dd4918746D7F016563Ce27FA",
    "contractAddress": "0x0BdccfbfB9AC1EBd71d65360D0F65581146c33EB",
    "transactionIndex": 24,
    "gasUsed": "5104497",
    "logsBloom": "0x
    "blockHash": "0x8b60c02ba487dae58cc7353abb728aeae7ab4c632279bbd45f5804505efd4180",
    "transactionHash": "0xcacedb3d95f4ab22472e410ea2a9c8660b2b40ef25dc75ac2ce0a7c01a4bd520",
    "logs": [],
    "blockNumber": 10161364,
    "cumulativeGasUsed": "7975139",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "Secret Project",
    "sPROJ",
    "0x744B8BD1aB1aE8ED8f798eA0cdf9da84625197Ff",
    "0xCC78016816633528Dd4918746D7F016563Ce27FA",
    "0x196eC7109e127A353B709a20da25052617295F6f"
  ],
  "numDeployments": 5,
  "solcInputHash": "a66314acbfe5d0bb330df552f8e8f2fc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_assetsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ensReverseAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"_getAttributes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"_tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"contract ISyntheticPunksAssets\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimMessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"claimOther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"layers\",\"type\":\"uint256[]\"}],\"name\":\"generatePunkSVG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_attributeId\",\"type\":\"uint256\"}],\"name\":\"getAttribute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAttributeCategories\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAttributes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getGender\",\"outputs\":[{\"internalType\":\"enum SyntheticPunks.Gender\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getTokenID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ethSignedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"recoverSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"splitSignature\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SyntheticPunks.sol\":\"SyntheticPunks\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern, minimalist, and gas efficient ERC-721 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\n/// @dev Note that balanceOf does not revert if passed the zero address, in defiance of the ERC.\\nabstract contract ERC721 {\\n    /*///////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 indexed id);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 indexed id);\\n\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                          METADATA STORAGE/LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    function tokenURI(uint256 id) public view virtual returns (string memory);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                            ERC721 STORAGE                        \\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(uint256 => address) public ownerOf;\\n\\n    mapping(uint256 => address) public getApproved;\\n\\n    mapping(address => mapping(address => bool)) public isApprovedForAll;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(string memory _name, string memory _symbol) {\\n        name = _name;\\n        symbol = _symbol;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC721 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 id) public virtual {\\n        address owner = ownerOf[id];\\n\\n        require(msg.sender == owner || isApprovedForAll[owner][msg.sender], \\\"NOT_AUTHORIZED\\\");\\n\\n        getApproved[id] = spender;\\n\\n        emit Approval(owner, spender, id);\\n    }\\n\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        isApprovedForAll[msg.sender][operator] = approved;\\n\\n        emit ApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        require(from == ownerOf[id], \\\"WRONG_FROM\\\");\\n\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(\\n            msg.sender == from || msg.sender == getApproved[id] || isApprovedForAll[from][msg.sender],\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n\\n        // Underflow of the sender's balance is impossible because we check for\\n        // ownership above and the recipient's balance can't realistically overflow.\\n        unchecked {\\n            balanceOf[from]--;\\n\\n            balanceOf[to]++;\\n        }\\n\\n        ownerOf[id] = to;\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(from, to, id);\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC165 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function supportsInterface(bytes4 interfaceId) public pure virtual returns (bool) {\\n        return\\n            interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165\\n            interfaceId == 0x80ac58cd || // ERC165 Interface ID for ERC721\\n            interfaceId == 0x5b5e139f; // ERC165 Interface ID for ERC721Metadata\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 id) internal virtual {\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(ownerOf[id] == address(0), \\\"ALREADY_MINTED\\\");\\n\\n        // Counter overflow is incredibly unrealistic.\\n        unchecked {\\n            balanceOf[to]++;\\n        }\\n\\n        ownerOf[id] = to;\\n\\n        emit Transfer(address(0), to, id);\\n    }\\n\\n    function _burn(uint256 id) internal virtual {\\n        address owner = ownerOf[id];\\n\\n        require(ownerOf[id] != address(0), \\\"NOT_MINTED\\\");\\n\\n        // Ownership check above ensures no underflow.\\n        unchecked {\\n            balanceOf[owner]--;\\n        }\\n\\n        delete ownerOf[id];\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(owner, address(0), id);\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL SAFE MINT LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _safeMint(address to, uint256 id) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function _safeMint(\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n}\\n\\n/// @notice A generic interface for a contract which properly accepts ERC721 tokens.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\ninterface ERC721TokenReceiver {\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xf97378ab999188b3d5d97037fabbecbc726892c74cba6536899b852eb4756d6a\",\"license\":\"AGPL-3.0-only\"},\"contracts/SyntheticPunks.sol\":{\"content\":\"\\n//  ______     __  __     __   __     ______   __  __     ______     ______   __     ______        ______   __  __     __   __     __  __     ______    \\n// /\\\\  ___\\\\   /\\\\ \\\\_\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\__  _\\\\ /\\\\ \\\\_\\\\ \\\\   /\\\\  ___\\\\   /\\\\__  _\\\\ /\\\\ \\\\   /\\\\  ___\\\\      /\\\\  == \\\\ /\\\\ \\\\/\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\ \\\\/ /    /\\\\  ___\\\\   \\n// \\\\ \\\\___  \\\\  \\\\ \\\\____ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\/_/\\\\ \\\\/ \\\\ \\\\  __ \\\\  \\\\ \\\\  __\\\\   \\\\/_/\\\\ \\\\/ \\\\ \\\\ \\\\  \\\\ \\\\ \\\\____     \\\\ \\\\  _-/ \\\\ \\\\ \\\\_\\\\ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\ \\\\  _\\\"-.  \\\\ \\\\___  \\\\  \\n//  \\\\/\\\\_____\\\\  \\\\/\\\\_____\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_____\\\\    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\  \\\\ \\\\_____\\\\     \\\\ \\\\_\\\\    \\\\ \\\\_____\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\/\\\\_____\\\\ \\n//   \\\\/_____/   \\\\/_____/   \\\\/_/ \\\\/_/     \\\\/_/   \\\\/_/\\\\/_/   \\\\/_____/     \\\\/_/   \\\\/_/   \\\\/_____/      \\\\/_/     \\\\/_____/   \\\\/_/ \\\\/_/   \\\\/_/\\\\/_/   \\\\/_____/ \\n                                                                                                                                                     \\n\\n// ................................................................................\\n// .....................................,,,........................................\\n// ...............................,,,,,,,,,,,,,,,..................................\\n// ............................,7777777777777777777,...............................\\n// .........................,,,,7777777777777777777,,,,............................\\n// ......................,,,,777~~~~~~~~~~~~~~~~~~~777,,,..........................\\n// ....................,,,,,:777,,,,,,,,,,,,,,,,,,,III:,,,,,.......................\\n// ..................,,,,=III~~~,,,,,,,,,,,,,,,,,,,~~~III=,,,,.....................\\n// .................,,,,,=III:::::::::::::::::::::::::III=,,,,,....................\\n// ................,,,777777777777777777777777777777777777777,,,...................\\n// ...............,,,,777777777777777777777777777777777777777,,,...................\\n// ................,,,777777777777777777777777777777777777777,,,...................\\n// ................,,,777777777777777777777777777777777777777,,,...................\\n// ................,,,===?II?=~~~~~~~~~~~~~~~~~~~~~~~~777+~~~,,,...................\\n// ................,,,,,,?III::,,,,,,,,,,,,,,,,,,,,,::777=,,,,,....................\\n// .................,,,,,IIII,,,,,,,,,,,,,,,,,,,,,,,,,777=,,,,,....................\\n// .................,,,,,I77I,,,,,..............,,,,,,777=,,,,.....................\\n// .................,,777===~,,,,................,,,,,777=,,,......................\\n// .................,,777~,,,,,,..................,,,,777=,,.......................\\n// .................,,777~,,,,,,777.............7II,,,777=,,.......................\\n// .................,,777~,,,,,,777,............777,,,777=,,.......................\\n// .................,,777?777,,,===,............===,,,777=,,.......................\\n// .................,,777?777,,,.................,,,,,777=,,.......................\\n// .................,,=+=+777,,,.................,,,,,777=,,.......................\\n// ..................,,,,+777,,,.................,,,,,777=,,.......................\\n// ..................,,,,+777,,,.........=777....,,,,,777=,,.......................\\n// ...................,,,=777,,,.........+777..,,,,,,,777=,,.......................\\n// ...................,,,+777,,,,.......,~++=,,,,,,,,,777=,,.......................\\n// ....................,,+777,,,,.....,,,,,,,,,,,,,,,,777=,,.......................\\n// .....................,=777,,,,,,,,,I777777777,,,,,,777=,........................\\n// .....................,+777,,,,,,,,,I777777777,,,,,,777=,........................\\n// .....................,=+++~~~,,,,,,=+++++++++,,,~~~+++~.........................\\n// ......................,,,:777,,,,,,,,,,,,,,,,,,,777:,,..........................\\n// ......................,,,:777,,,:::,,,,,,,,,,:::III:,...........................\\n// ......................,,,:777,,,777:,,,,,,,,:777,,,.............................\\n// ......................,,,:777,,,777~,,,,,,,,:777,,,.............................\\n// ......................,,,:777,,,,,,III?77?777,,,,...............................\\n// ......................,,,:777,,,,,,III?77?77I,,,,...............................\\n// .......................,,:777,,,,,,,,,:77?,,,,,.................................\\n// .......................,,,777,,,,,,,,,:77?,,,,..................................\\n// .........................,???,,,,,,,,,:??=,,,...................................\\n// ............................,.........,,,.,.....................................\\n// ................................................................................\\n\\n//SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"@rari-capital/solmate/src/tokens/ERC721.sol\\\";\\nimport \\\"./interfaces/ISyntheticPunksAssets.sol\\\";\\n\\nabstract contract ReverseRecords {\\n  function getNames(address[] calldata addresses) external view virtual returns (string[] memory r);\\n}\\n\\ncontract SyntheticPunks is ERC721 {\\n\\n  ISyntheticPunksAssets public assets;\\n  uint256 public immutable claimPrice = 0.02 ether;\\n  address public immutable withdrawAddress;\\n  address immutable ensReverseAddress;\\n  string public constant claimMessage = \\\"Message to claim Synthetic Punk\\\";\\n\\n  mapping(address => bool) public claimed;\\n\\n  enum Gender { Male, Female }\\n\\n  constructor(\\n    string memory _name, \\n    string memory _symbol, \\n    address _assetsAddress,\\n    address _withdrawAddress,\\n    address _ensReverseAddress\\n  ) ERC721(_name, _symbol) {\\n    assets = ISyntheticPunksAssets(_assetsAddress);\\n    withdrawAddress = _withdrawAddress;\\n    ensReverseAddress = _ensReverseAddress;\\n  }\\n\\n  function claim() public payable {\\n    require(msg.value >= claimPrice, \\\"Insufficient payment\\\");\\n    _safeMint(msg.sender, getTokenID(msg.sender));\\n    claimed[msg.sender] = true;\\n    uint256 refund = msg.value - claimPrice;\\n    if (refund > 0) {\\n      payable(msg.sender).transfer(refund);\\n    }\\n  }\\n\\n  function claimOther(address _signer, bytes memory _signature) public payable {\\n    require(msg.value >= claimPrice, \\\"Insufficient payment\\\");\\n    require(verify(_signer, claimMessage, _signature), \\\"Invalid signature\\\");\\n\\n    _safeMint(msg.sender, getTokenID(_signer));\\n    claimed[_signer] = true;\\n    uint256 refund = msg.value - claimPrice;\\n    if (refund > 0) {\\n      payable(_signer).transfer(refund);\\n    }\\n  }\\n\\n  \\n\\n  function withdraw() public {\\n    payable(withdrawAddress).transfer(address(this).balance);\\n  }\\n\\n  function _tokenURI(address _address) public view returns (string memory) {\\n    return tokenURI(getTokenID(_address));\\n  }\\n\\n  function getTokenID(address _address) public pure returns (uint256) {\\n    return uint256(uint160(_address));\\n  }\\n\\n  function getAddress(uint256 id) public pure returns (address) {\\n    return address(uint160(id));\\n  }\\n\\n  function tokenURI(uint256 id) public view override returns (string memory) {\\n    uint256[] memory layers = getAttributes(id);\\n    string memory punkSVG = generatePunkSVG(layers);\\n\\n    address userAddress = getAddress(id);\\n    string memory ensName = reverseName(userAddress);  \\n    string memory addressOrENS = bytes(ensName).length == 0 ? toString(userAddress) : ensName;\\n    \\n    string memory json = base64(bytes(abi.encodePacked('{\\\"name\\\": \\\"', 'Synthetic CryptoPunk for ', addressOrENS, '\\\", \\\"description\\\": \\\"This is a unique Punk claimed by ', addressOrENS,'.\\\", \\\"image\\\": \\\"data:image/svg+xml;base64,', base64(bytes(punkSVG)), '\\\"}')));\\n\\n    return string(abi.encodePacked('data:application/json;base64,', json));\\n  }\\n\\n  // Entropy 0\\n  function getGender(uint256 id) public view returns (Gender) {\\n    return randomUint(id, 0) % 2 == 0 ? Gender.Male : Gender.Female;\\n  }\\n\\n  // Entropy 1,2-9\\n  function getAttributeCategories(uint256 id) public view returns (uint256[] memory) {\\n    uint256[4][9] memory spritesheetRanges = assets.spritesheetRanges();\\n    uint256 checks = 2 + randomUint(id, 1) % (spritesheetRanges.length - 3); // Number of bytes to check\\n    uint256[] memory attributes = new uint256[](checks); // TODO: Check at least 1 attribute\\n    uint256 length = 0;\\n    for (uint256 i; i < checks; i++) {\\n      uint256 newAttribute = randomUint(id, 2+i) % (spritesheetRanges.length - 2) + 1; // Skip base category\\n      \\n      bool added = contains(attributes, newAttribute);\\n\\n      if (added) {\\n        continue;\\n      }\\n\\n      if (getGender(id) == Gender.Female) {\\n        if (!(spritesheetRanges[newAttribute][3] - spritesheetRanges[newAttribute][1] == 0)) {\\n          attributes[length] = newAttribute;\\n          length++;\\n        }\\n      } else {\\n        if (!(spritesheetRanges[newAttribute][2] - spritesheetRanges[newAttribute][0] == 0)) {\\n          attributes[length] = newAttribute;\\n          length++;\\n        }\\n      }\\n    }\\n\\n    uint256[] memory attributesResized = new uint256[](length+1);\\n    attributesResized[0] = 0;\\n    for (uint256 i; i < length; i++) {\\n      attributesResized[i+1] = attributes[i];\\n    }\\n\\n    return attributesResized;\\n  }\\n\\n  // Entropy 10\\n  function getAttribute(uint256 id, uint256 _attributeId) public view returns (uint256) {\\n    uint256[4] memory ranges = assets.spritesheetRanges()[_attributeId];\\n    Gender gender = getGender(id);\\n    if (gender == Gender.Female) {\\n      return ranges[1] + randomUint(id, 10+_attributeId) % (ranges[3] - ranges[1]);\\n    } else {\\n      return ranges[0] + randomUint(id, 10+_attributeId) % (ranges[2] - ranges[0]);\\n    }\\n  }\\n\\n  function _getAttributes(address _address) public view returns (uint256[] memory) {\\n    return getAttributes(getTokenID(_address));\\n  }\\n\\n  function getAttributes(uint256 id) public view returns (uint256[] memory) {\\n    uint256[] memory attributeCategories = getAttributeCategories(id);\\n    uint256[] memory layers = new uint256[](attributeCategories.length);\\n    for (uint256 i = 0; i < attributeCategories.length; i++) {\\n      layers[i] = getAttribute(id, attributeCategories[i]);\\n    }\\n    return layers;\\n  }\\n\\n  function generatePunkSVG(uint256[] memory layers) public view returns (string memory) {\\n    string memory start1 = '<svg viewBox=\\\"0 0 24 24\\\" width=\\\"1000\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" ><defs><style>#spritesheet { image-rendering: -webkit-optimize-contrast; image-rendering: crisp-edges; image-rendering: pixelated; } #punk { filter: drop-shadow(0px 0px 50px rgb(0, 255, 166, 0.7)); } svg { background : #6A9480; }</style><svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"48 0 24 24\\\"><image id=\\\"spritesheet\\\" preserveAspectRatio=\\\"xMinYMin slice\\\" href=\\\"';\\n    string memory start3 = '\\\"></image></svg></defs><svg id=\\\"punk\\\">';\\n    string memory end = '</svg></svg>';\\n    string memory layersSVG = '';\\n\\n    // Render in order\\n    for (uint256 i = 0; i < assets.spritesheetRanges().length; i++) {\\n      for (uint256 j = 0; j < layers.length; j++) {\\n        if (assets.spritesheetRanges()[i][0] <= layers[j] && layers[j] < assets.spritesheetRanges()[i][3]) { // if layer is in range\\n          // console.log(layers[j]);\\n          uint256 id = layers[j];\\n          uint256 x = (id % 24) * 24;\\n          uint256 y = (id / 24) * 24;\\n          layersSVG = string(abi.encodePacked(layersSVG, '<svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"', toString(x), ' ', toString(y), ' 24 24\\\"><use href=\\\"#spritesheet\\\"></use></svg>'));\\n          break;\\n        }\\n      }\\n    }\\n\\n    return string(abi.encodePacked(start1, assets.spritesheetImageData(), start3, layersSVG, end)) ;\\n  }\\n  \\n  function reverseName(address _address) internal view returns (string memory name) {\\n    if (address(0) == ensReverseAddress) {\\n      return name;\\n    }\\n    ReverseRecords ens = ReverseRecords(ensReverseAddress);\\n    address[] memory t = new address[](1);\\n    t[0] = _address;\\n    name = ens.getNames(t)[0];\\n  }\\n\\n  function contains(uint256[] memory arr, uint256 element) internal pure returns (bool) {\\n    for (uint256 i = 0; i < arr.length; i++) {\\n      if (arr[i] == element) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n\\n  function randomUint(uint256 seed, uint256 offset) public view returns (uint256) {\\n    require(offset < 32, \\\"Offset out of bounds\\\");\\n    bytes32 entropy = keccak256(abi.encodePacked(address(this), seed)); // TODO: Consider not including address in entropy\\n    bytes32 mask = bytes32(0xff << (offset * 8));\\n    uint256 out = uint256((entropy & mask) >> (offset * 8));\\n    return out;\\n  }\\n\\n  function toString(address account) internal pure returns(string memory) {\\n    return toString(abi.encodePacked(account));\\n  }\\n\\n  function toString(bytes32 value) internal pure returns(string memory) {\\n    return toString(abi.encodePacked(value));\\n  }\\n\\n  function toString(bytes memory data) internal pure returns(string memory) {\\n    bytes memory alphabet = \\\"0123456789abcdef\\\";\\n\\n    bytes memory str = new bytes(2 + data.length * 2);\\n    str[0] = \\\"0\\\";\\n    str[1] = \\\"x\\\";\\n    for (uint i = 0; i < data.length; i++) {\\n        str[2+i*2] = alphabet[uint(uint8(data[i] >> 4))];\\n        str[3+i*2] = alphabet[uint(uint8(data[i] & 0x0f))];\\n    }\\n    return string(str);\\n  }\\n\\n  function toString(uint256 n) \\n      internal \\n      pure \\n      returns (string memory nstr) \\n  {\\n    uint256 MAX_UINT256_STRING_LENGTH = 78;\\n    uint8 ASCII_DIGIT_OFFSET = 48;\\n    if (n == 0) {\\n        return \\\"0\\\";\\n    }\\n    // Overallocate memory\\n    nstr = new string(MAX_UINT256_STRING_LENGTH);\\n    uint256 k = MAX_UINT256_STRING_LENGTH;\\n    // Populate string from right to left (lsb to msb).\\n    while (n != 0) {\\n      assembly {\\n        let char := add(\\n          ASCII_DIGIT_OFFSET,\\n          mod(n, 10)\\n        )\\n        mstore(add(nstr, k), char)\\n        k := sub(k, 1)\\n        n := div(n, 10)\\n      }\\n    }\\n    assembly {\\n      // Shift pointer over to actual start of string.\\n      nstr := add(nstr, k)\\n      // Store actual string length.\\n      mstore(nstr, sub(MAX_UINT256_STRING_LENGTH, k))\\n    }\\n    return nstr;\\n  }\\n\\n  /// @notice Encodes some bytes to the base64 representation\\n  function base64(bytes memory data) internal pure returns (string memory) {\\n    bytes memory TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n    uint256 len = data.length;\\n    if (len == 0) return \\\"\\\";\\n\\n    // multiply by 4/3 rounded up\\n    uint256 encodedLen = 4 * ((len + 2) / 3);\\n\\n    // Add some extra buffer at the end\\n    bytes memory result = new bytes(encodedLen + 32);\\n\\n    bytes memory table = TABLE;\\n\\n    assembly {\\n      let tablePtr := add(table, 1)\\n      let resultPtr := add(result, 32)\\n\\n      for {\\n        let i := 0\\n      } lt(i, len) {\\n\\n      } {\\n        i := add(i, 3)\\n        let input := and(mload(add(data, i)), 0xffffff)\\n\\n        let out := mload(add(tablePtr, and(shr(18, input), 0x3F)))\\n        out := shl(8, out)\\n        out := add(out, and(mload(add(tablePtr, and(shr(12, input), 0x3F))), 0xFF))\\n        out := shl(8, out)\\n        out := add(out, and(mload(add(tablePtr, and(shr(6, input), 0x3F))), 0xFF))\\n        out := shl(8, out)\\n        out := add(out, and(mload(add(tablePtr, and(input, 0x3F))), 0xFF))\\n        out := shl(224, out)\\n\\n        mstore(resultPtr, out)\\n\\n        resultPtr := add(resultPtr, 4)\\n      }\\n\\n      switch mod(len, 3)\\n      case 1 {\\n          mstore(sub(resultPtr, 2), shl(240, 0x3d3d))\\n      }\\n      case 2 {\\n          mstore(sub(resultPtr, 1), shl(248, 0x3d))\\n      }\\n\\n      mstore(result, encodedLen)\\n    }\\n\\n    return string(result);\\n  }\\n\\n  // ECDSA\\n\\n  function getMessageHash(\\n    string memory _message\\n  ) public pure returns (bytes32) {\\n    return keccak256(abi.encodePacked(_message));\\n  }\\n\\n  function getEthSignedMessageHash(bytes32 _messageHash)\\n    public\\n    pure \\n    returns (bytes32)\\n  {\\n    return\\n      keccak256(\\n        abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", _messageHash)\\n      );\\n  }\\n\\n  function verify(\\n    address _signer,\\n    string memory _message,\\n    bytes memory signature\\n  ) public pure returns (bool) {\\n    bytes32 messageHash = getMessageHash(_message);\\n    bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash);\\n\\n    return recoverSigner(ethSignedMessageHash, signature) == _signer;\\n  }\\n\\n  function recoverSigner(bytes32 _ethSignedMessageHash, bytes memory _signature)\\n    public\\n    pure\\n    returns (address)\\n  {\\n    (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature);\\n\\n    return ecrecover(_ethSignedMessageHash, v, r, s);\\n  }\\n\\n  function splitSignature(bytes memory sig)\\n    public\\n    pure\\n    returns (\\n        bytes32 r,\\n        bytes32 s,\\n        uint8 v\\n    )\\n  {\\n    require(sig.length == 65, \\\"invalid signature length\\\");\\n\\n    assembly {\\n      // first 32 bytes, after the length prefix\\n      r := mload(add(sig, 32))\\n      // second 32 bytes\\n      s := mload(add(sig, 64))\\n      // final byte (first byte of the next 32 bytes)\\n      v := byte(0, mload(add(sig, 96)))\\n    }\\n  }\\n}\",\"keccak256\":\"0xdf482715aeaee39184c608e4843866838cdec03b7567ac806f9b70d0ff4df0e6\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ISyntheticPunksAssets.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.0;\\n\\ninterface ISyntheticPunksAssets {\\n  function spritesheetImageData() external view returns (string memory);\\n  function spritesheetRanges() external view returns (uint256[4][9] memory);\\n  function attributesContentURI() external view returns (string memory);\\n}\",\"keccak256\":\"0x8d122d962831b0c599affa0587fb81aac33e21ccef08b36563c7db7576944c28\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60e060405266470de4df8200006080908152503480156200001f57600080fd5b5060405162005f5f38038062005f5f83398181016040528101906200004591906200026e565b848481600090805190602001906200005f92919062000135565b5080600190805190602001906200007892919062000135565b50505082600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b815250505050505050620004a1565b8280546200014390620003f3565b90600052602060002090601f016020900481019282620001675760008555620001b3565b82601f106200018257805160ff1916838001178555620001b3565b82800160010185558215620001b3579182015b82811115620001b257825182559160200191906001019062000195565b5b509050620001c29190620001c6565b5090565b5b80821115620001e1576000816000905550600101620001c7565b5090565b6000620001fc620001f68462000356565b62000322565b9050828152602081018484840111156200021557600080fd5b62000222848285620003bd565b509392505050565b6000815190506200023b8162000487565b92915050565b600082601f8301126200025357600080fd5b815162000265848260208601620001e5565b91505092915050565b600080600080600060a086880312156200028757600080fd5b600086015167ffffffffffffffff811115620002a257600080fd5b620002b08882890162000241565b955050602086015167ffffffffffffffff811115620002ce57600080fd5b620002dc8882890162000241565b9450506040620002ef888289016200022a565b935050606062000302888289016200022a565b925050608062000315888289016200022a565b9150509295509295909350565b6000604051905081810181811067ffffffffffffffff821117156200034c576200034b62000458565b5b8060405250919050565b600067ffffffffffffffff82111562000374576200037362000458565b5b601f19601f8301169050602081019050919050565b600062000396826200039d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620003dd578082015181840152602081019050620003c0565b83811115620003ed576000848401525b50505050565b600060028204905060018216806200040c57607f821691505b6020821081141562000423576200042262000429565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620004928162000389565b81146200049e57600080fd5b50565b60805160a05160601c60c05160601c615a5e620005016000396000818161312c0152613188015260008181610c9e015261117d015260008181610cc201528181611485015281816115540152818161271d015261286b0152615a5e6000f3fe60806040526004361061020f5760003560e01c806378619bdf11610118578063b88d4fde116100a0578063d61b051b1161006f578063d61b051b1461082f578063e06d2eb51461086c578063e985e9c5146108a9578063fa540801146108e6578063fe0bc600146109235761020f565b8063b88d4fde1461074f578063b93f9b0a14610778578063c87b56dd146107b5578063c884ef83146107f25761020f565b80639d4776b2116100e75780639d4776b214610651578063a22cb4651461066d578063a7bb580314610696578063af4fb353146106d5578063b446f3b2146107125761020f565b806378619bdf1461056f57806385d940ec146105ac57806395d89b41146105e957806397aba7f9146106145761020f565b80633ccfd60b1161019b5780636352211e1161016a5780636352211e1461045057806363f8071c1461048d57806370a08231146104ca57806371a97305146105075780637685945e146105325761020f565b80633ccfd60b146103c957806342842e0e146103e05780634378a6e3146104095780634e71d92d146104465761020f565b80631581b600116101e25780631581b600146102e257806315d655c91461030d57806323b872dd146103385780632dd34f0f146103615780633b85df721461039e5761020f565b806301ffc9a71461021457806306fdde0314610251578063081812fc1461027c578063095ea7b3146102b9575b600080fd5b34801561022057600080fd5b5061023b60048036038101906102369190614363565b610960565b6040516102489190614f4a565b60405180910390f35b34801561025d57600080fd5b506102666109f2565b6040516102739190615032565b60405180910390f35b34801561028857600080fd5b506102a3600480360381019061029e9190614478565b610a80565b6040516102b09190614e55565b60405180910390f35b3480156102c557600080fd5b506102e060048036038101906102db91906141fe565b610ab3565b005b3480156102ee57600080fd5b506102f7610c9c565b6040516103049190614e55565b60405180910390f35b34801561031957600080fd5b50610322610cc0565b60405161032f9190615174565b60405180910390f35b34801561034457600080fd5b5061035f600480360381019061035a9190614025565b610ce4565b005b34801561036d57600080fd5b506103886004803603810190610383919061417f565b6110e4565b6040516103959190614f4a565b60405180910390f35b3480156103aa57600080fd5b506103b3611142565b6040516103c09190615032565b60405180910390f35b3480156103d557600080fd5b506103de61117b565b005b3480156103ec57600080fd5b5061040760048036038101906104029190614025565b6111e4565b005b34801561041557600080fd5b50610430600480360381019061042b9190614478565b611347565b60405161043d9190614f28565b60405180910390f35b61044e611483565b005b34801561045c57600080fd5b5061047760048036038101906104729190614478565b6115d4565b6040516104849190614e55565b60405180910390f35b34801561049957600080fd5b506104b460048036038101906104af9190613fc0565b611607565b6040516104c19190615174565b60405180910390f35b3480156104d657600080fd5b506104f160048036038101906104ec9190613fc0565b611627565b6040516104fe9190615174565b60405180910390f35b34801561051357600080fd5b5061051c61163f565b6040516105299190614ffc565b60405180910390f35b34801561053e57600080fd5b50610559600480360381019061055491906144a1565b611665565b6040516105669190615174565b60405180910390f35b34801561057b57600080fd5b50610596600480360381019061059191906142a5565b6119c3565b6040516105a39190615032565b60405180910390f35b3480156105b857600080fd5b506105d360048036038101906105ce9190614478565b611f8e565b6040516105e09190614f28565b60405180910390f35b3480156105f557600080fd5b506105fe61261e565b60405161060b9190615032565b60405180910390f35b34801561062057600080fd5b5061063b6004803603810190610636919061430f565b6126ac565b6040516106489190614e55565b60405180910390f35b61066b6004803603810190610666919061412b565b61271b565b005b34801561067957600080fd5b50610694600480360381019061068f91906140ef565b6128ed565b005b3480156106a257600080fd5b506106bd60048036038101906106b891906143b5565b6129ea565b6040516106cc93929190614f80565b60405180910390f35b3480156106e157600080fd5b506106fc60048036038101906106f79190613fc0565b612a52565b6040516107099190615032565b60405180910390f35b34801561071e57600080fd5b50610739600480360381019061073491906143f6565b612a6c565b6040516107469190614f65565b60405180910390f35b34801561075b57600080fd5b5061077660048036038101906107719190614074565b612a9c565b005b34801561078457600080fd5b5061079f600480360381019061079a9190614478565b612c02565b6040516107ac9190614e55565b60405180910390f35b3480156107c157600080fd5b506107dc60048036038101906107d79190614478565b612c0c565b6040516107e99190615032565b60405180910390f35b3480156107fe57600080fd5b5061081960048036038101906108149190613fc0565b612cc3565b6040516108269190614f4a565b60405180910390f35b34801561083b57600080fd5b50610856600480360381019061085191906144a1565b612ce3565b6040516108639190615174565b60405180910390f35b34801561087857600080fd5b50610893600480360381019061088e9190614478565b612d92565b6040516108a09190615017565b60405180910390f35b3480156108b557600080fd5b506108d060048036038101906108cb9190613fe9565b612dc2565b6040516108dd9190614f4a565b60405180910390f35b3480156108f257600080fd5b5061090d600480360381019061090891906142e6565b612df1565b60405161091a9190614f65565b60405180910390f35b34801561092f57600080fd5b5061094a60048036038101906109459190613fc0565b612e21565b6040516109579190614f28565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806109bb57506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806109eb5750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600080546109ff906155a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2b906155a4565b8015610a785780601f10610a4d57610100808354040283529160200191610a78565b820191906000526020600020905b815481529060010190602001808311610a5b57829003601f168201915b505050505081565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610bab5750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610bea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be190615134565b60405180910390fd5b826004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610d85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7c90615154565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610df5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dec90615074565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e8d57506004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80610f1e5750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610f5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5490615134565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000806110f084612a6c565b905060006110fd82612df1565b90508573ffffffffffffffffffffffffffffffffffffffff1661112082866126ac565b73ffffffffffffffffffffffffffffffffffffffff1614925050509392505050565b6040518060400160405280601f81526020017f4d65737361676520746f20636c61696d2053796e7468657469632050756e6b0081525081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156111e1573d6000803e3d6000fd5b50565b6111ef838383610ce4565b60008273ffffffffffffffffffffffffffffffffffffffff16803b806020016040519081016040528181526000908060200190933c511480611303575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a023386856040518463ffffffff1660e01b815260040161129093929190614ebc565b602060405180830381600087803b1580156112aa57600080fd5b505af11580156112be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e2919061438c565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b611342576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611339906150b4565b60405180910390fd5b505050565b6060600061135483611f8e565b90506000815167ffffffffffffffff811115611399577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156113c75781602001602082028036833780820191505090505b50905060005b82518110156114785761142085848381518110611413577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151611665565b828281518110611459577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508080611470906155d6565b9150506113cd565b508092505050919050565b7f00000000000000000000000000000000000000000000000000000000000000003410156114e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114dd90615094565b60405180910390fd5b6114f8336114f333611607565b612e3b565b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060007f00000000000000000000000000000000000000000000000000000000000000003461157e919061545a565b905060008111156115d1573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156115cf573d6000803e3d6000fd5b505b50565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff169050919050565b60026020528060005260406000206000915090505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a161b7c6040518163ffffffff1660e01b81526004016104806040518083038186803b1580156116d157600080fd5b505afa1580156116e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611709919061423a565b8360098110611741577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201519050600061175385612d92565b905060018081111561178e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160018111156117c7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156118c75781600160048110611807577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015182600360048110611846577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151611855919061545a565b61186b8686600a6118669190615379565b612ce3565b6118759190615657565b826001600481106118af577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516118be9190615379565b925050506119bd565b81600060048110611901577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015182600260048110611940577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015161194f919061545a565b6119658686600a6119609190615379565b612ce3565b61196f9190615657565b826000600481106119a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516119b89190615379565b925050505b92915050565b60606000604051806101e001604052806101aa815260200161587f6101aa91399050600060405180606001604052806026815260200161585960269139905060006040518060400160405280600c81526020017f3c2f7376673e3c2f7376673e00000000000000000000000000000000000000008152509050600060405180602001604052806000815250905060005b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a161b7c6040518163ffffffff1660e01b81526004016104806040518083038186803b158015611abc57600080fd5b505afa158015611ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611af4919061423a565b506009811015611eb65760005b8751811015611ea257878181518110611b43577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a161b7c6040518163ffffffff1660e01b81526004016104806040518083038186803b158015611bb457600080fd5b505afa158015611bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bec919061423a565b8360098110611c24577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151600060048110611c62577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015111158015611dcf5750600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a161b7c6040518163ffffffff1660e01b81526004016104806040518083038186803b158015611cd957600080fd5b505afa158015611ced573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d11919061423a565b8260098110611d49577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151600360048110611d87577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151888281518110611dc5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151105b15611e8f576000888281518110611e0f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050600060188083611e299190615657565b611e339190615400565b9050600060188084611e4591906153cf565b611e4f9190615400565b905085611e5b83612f9d565b611e6483612f9d565b604051602001611e7693929190614d53565b6040516020818303038152906040529550505050611ea2565b8080611e9a906155d6565b915050611b01565b508080611eae906155d6565b915050611a53565b5083600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166360787be36040518163ffffffff1660e01b815260040160006040518083038186803b158015611f2057600080fd5b505afa158015611f34573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611f5d9190614437565b848385604051602001611f74959493929190614d08565b604051602081830303815290604052945050505050919050565b60606000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a161b7c6040518163ffffffff1660e01b81526004016104806040518083038186803b158015611ffb57600080fd5b505afa15801561200f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612033919061423a565b9050600060036009612045919061545a565b612050856001612ce3565b61205a9190615657565b60026120669190615379565b905060008167ffffffffffffffff8111156120aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156120d85781602001602082028036833780820191505090505b5090506000805b838110156124985760006001600260096120f9919061545a565b61210f8a85600261210a9190615379565b612ce3565b6121199190615657565b6121239190615379565b9050600061213185836130a6565b90508015612140575050612485565b600180811115612179577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6121828a612d92565b60018111156121ba577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156123235760008783600981106121fb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151600160048110612239577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151888460098110612277577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516003600481106122b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516122c4919061545a565b1461231e5781858581518110612303577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050838061231a906155d6565b9450505b612482565b600087836009811061235e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015160006004811061239c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518884600981106123da577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151600260048110612418577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151612427919061545a565b146124815781858581518110612466577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050838061247d906155d6565b9450505b5b50505b8080612490906155d6565b9150506120df565b5060006001826124a89190615379565b67ffffffffffffffff8111156124e7577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156125155781602001602082028036833780820191505090505b509050600081600081518110612554577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505060005b82811015612610578381815181106125a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151826001836125ba9190615379565b815181106125f1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508080612608906155d6565b915050612563565b508095505050505050919050565b6001805461262b906155a4565b80601f0160208091040260200160405190810160405280929190818152602001828054612657906155a4565b80156126a45780601f10612679576101008083540402835291602001916126a4565b820191906000526020600020905b81548152906001019060200180831161268757829003601f168201915b505050505081565b6000806000806126bb856129ea565b925092509250600186828585604051600081526020016040526040516126e49493929190614fb7565b6020604051602081039080840390855afa158015612706573d6000803e3d6000fd5b50505060206040510351935050505092915050565b7f000000000000000000000000000000000000000000000000000000000000000034101561277e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161277590615094565b60405180910390fd5b6127be826040518060400160405280601f81526020017f4d65737361676520746f20636c61696d2053796e7468657469632050756e6b00815250836110e4565b6127fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127f490615054565b60405180910390fd5b61280f3361280a84611607565b612e3b565b6001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060007f000000000000000000000000000000000000000000000000000000000000000034612895919061545a565b905060008111156128e8578273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156128e6573d6000803e3d6000fd5b505b505050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516129de9190614f4a565b60405180910390a35050565b60008060006041845114612a33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a2a906150f4565b60405180910390fd5b6020840151925060408401519150606084015160001a90509193909250565b6060612a65612a6083611607565b612c0c565b9050919050565b600081604051602001612a7f9190614cf1565b604051602081830303815290604052805190602001209050919050565b612aa7848484610ce4565b60008373ffffffffffffffffffffffffffffffffffffffff16803b806020016040519081016040528181526000908060200190933c511480612bbd575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168373ffffffffffffffffffffffffffffffffffffffff1663150b7a02338786866040518563ffffffff1660e01b8152600401612b4a9493929190614e70565b602060405180830381600087803b158015612b6457600080fd5b505af1158015612b78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b9c919061438c565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b612bfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bf3906150b4565b60405180910390fd5b50505050565b6000819050919050565b60606000612c1983611347565b90506000612c26826119c3565b90506000612c3385612c02565b90506000612c4082613128565b9050600080825114612c525781612c5c565b612c5b8361336b565b5b90506000612c948283612c6e8861339c565b604051602001612c8093929190614dcb565b60405160208183030381529060405261339c565b905080604051602001612ca79190614e33565b6040516020818303038152906040529650505050505050919050565b60076020528060005260406000206000915054906101000a900460ff1681565b600060208210612d28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d1f906150d4565b60405180910390fd5b60003084604051602001612d3d929190614cc5565b6040516020818303038152906040528051906020012090506000600884612d649190615400565b60ff901b60001b90506000600885612d7c9190615400565b828416901c60001c905080935050505092915050565b6000806002612da2846000612ce3565b612dac9190615657565b14612db8576001612dbb565b60005b9050919050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600081604051602001612e049190614da5565b604051602081830303815290604052805190602001209050919050565b6060612e34612e2f83611607565b611347565b9050919050565b612e458282613561565b60008273ffffffffffffffffffffffffffffffffffffffff16803b806020016040519081016040528181526000908060200190933c511480612f5a575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a02336000856040518463ffffffff1660e01b8152600401612ee793929190614ebc565b602060405180830381600087803b158015612f0157600080fd5b505af1158015612f15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f39919061438c565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b612f99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f90906150b4565b60405180910390fd5b5050565b60606000604e90506000603090506000841415612ff3576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250925050506130a1565b8167ffffffffffffffff811115613033577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156130655781602001600182028036833780820191505090505b50925060008290505b6000851461309357600a850682018082860152600182039150600a860495505061306e565b808401935080830384525050505b919050565b600080600090505b835181101561311c57828482815181106130f1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101511415613109576001915050613122565b8080613114906155d6565b9150506130ae565b50600090505b92915050565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff16141561318457613366565b60007f000000000000000000000000000000000000000000000000000000000000000090506000600167ffffffffffffffff8111156131ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561321a5781602001602082028036833780820191505090505b5090508381600081518110613258577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1663cbf8b66c826040518263ffffffff1660e01b81526004016132cb9190614f06565b60006040518083038186803b1580156132e357600080fd5b505afa1580156132f7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906133209190614264565b600081518110613359577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151925050505b919050565b6060613395826040516020016133819190614caa565b604051602081830303815290604052613774565b9050919050565b6060600060405180606001604052806040815260200161581960409139905060008351905060008114156133e357604051806020016040528060008152509250505061355c565b600060036002836133f49190615379565b6133fe91906153cf565b600461340a9190615400565b9050600060208261341b9190615379565b67ffffffffffffffff81111561345a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561348c5781602001600182028036833780820191505090505b5090506000849050600181016020830160005b868110156135185760038101905062ffffff818b015116603f8160121c168401518060081b905060ff603f83600c1c1686015116810190508060081b905060ff603f8360061c1686015116810190508060081b905060ff603f831686015116810190508060e01b9050808452600484019350505061349f565b50600386066001811461353257600281146135425761354d565b613d3d60f01b600283035261354d565b603d60f81b60018303525b50848452505081955050505050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156135d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016135c890615074565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161366a90615114565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b606060006040518060400160405280601081526020017f303132333435363738396162636465660000000000000000000000000000000081525090506000600284516137c09190615400565b60026137cc9190615379565b67ffffffffffffffff81111561380b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561383d5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061389b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110613925577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060005b8451811015613bb95782600486838151811061399c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60f81c60ff1681518110613a08577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b82600283613a219190615400565b6002613a2d9190615379565b81518110613a64577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535082600f60f81b868381518110613ad2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b1660f81c60ff1681518110613b1b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b82600283613b349190615400565b6003613b409190615379565b81518110613b77577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080613bb1906155d6565b915050613957565b508092505050919050565b6000613bd7613bd2846151c0565b61518f565b90508082856080860282011115613bed57600080fd5b60005b85811015613c1d5781613c038882613e73565b845260208401935060808301925050600181019050613bf0565b5050509392505050565b6000613c3a613c35846151e6565b61518f565b9050808382526020820190508260005b85811015613c7a5781518501613c608882613f6c565b845260208401935060208301925050600181019050613c4a565b5050509392505050565b6000613c97613c9284615212565b61518f565b90508082856020860282011115613cad57600080fd5b60005b85811015613cdd5781613cc38882613fab565b845260208401935060208301925050600181019050613cb0565b5050509392505050565b6000613cfa613cf584615238565b61518f565b90508083825260208201905082856020860282011115613d1957600080fd5b60005b85811015613d495781613d2f8882613f96565b845260208401935060208301925050600181019050613d1c565b5050509392505050565b6000613d66613d6184615264565b61518f565b905082815260208101848484011115613d7e57600080fd5b613d89848285615562565b509392505050565b6000613da4613d9f84615294565b61518f565b905082815260208101848484011115613dbc57600080fd5b613dc7848285615562565b509392505050565b6000613de2613ddd84615294565b61518f565b905082815260208101848484011115613dfa57600080fd5b613e05848285615571565b509392505050565b600081359050613e1c816157a5565b92915050565b600082601f830112613e3357600080fd5b6009613e40848285613bc4565b91505092915050565b600082601f830112613e5a57600080fd5b8151613e6a848260208601613c27565b91505092915050565b600082601f830112613e8457600080fd5b6004613e91848285613c84565b91505092915050565b600082601f830112613eab57600080fd5b8135613ebb848260208601613ce7565b91505092915050565b600081359050613ed3816157bc565b92915050565b600081359050613ee8816157d3565b92915050565b600081359050613efd816157ea565b92915050565b600081519050613f12816157ea565b92915050565b600082601f830112613f2957600080fd5b8135613f39848260208601613d53565b91505092915050565b600082601f830112613f5357600080fd5b8135613f63848260208601613d91565b91505092915050565b600082601f830112613f7d57600080fd5b8151613f8d848260208601613dcf565b91505092915050565b600081359050613fa581615801565b92915050565b600081519050613fba81615801565b92915050565b600060208284031215613fd257600080fd5b6000613fe084828501613e0d565b91505092915050565b60008060408385031215613ffc57600080fd5b600061400a85828601613e0d565b925050602061401b85828601613e0d565b9150509250929050565b60008060006060848603121561403a57600080fd5b600061404886828701613e0d565b935050602061405986828701613e0d565b925050604061406a86828701613f96565b9150509250925092565b6000806000806080858703121561408a57600080fd5b600061409887828801613e0d565b94505060206140a987828801613e0d565b93505060406140ba87828801613f96565b925050606085013567ffffffffffffffff8111156140d757600080fd5b6140e387828801613f18565b91505092959194509250565b6000806040838503121561410257600080fd5b600061411085828601613e0d565b925050602061412185828601613ec4565b9150509250929050565b6000806040838503121561413e57600080fd5b600061414c85828601613e0d565b925050602083013567ffffffffffffffff81111561416957600080fd5b61417585828601613f18565b9150509250929050565b60008060006060848603121561419457600080fd5b60006141a286828701613e0d565b935050602084013567ffffffffffffffff8111156141bf57600080fd5b6141cb86828701613f42565b925050604084013567ffffffffffffffff8111156141e857600080fd5b6141f486828701613f18565b9150509250925092565b6000806040838503121561421157600080fd5b600061421f85828601613e0d565b925050602061423085828601613f96565b9150509250929050565b6000610480828403121561424d57600080fd5b600061425b84828501613e22565b91505092915050565b60006020828403121561427657600080fd5b600082015167ffffffffffffffff81111561429057600080fd5b61429c84828501613e49565b91505092915050565b6000602082840312156142b757600080fd5b600082013567ffffffffffffffff8111156142d157600080fd5b6142dd84828501613e9a565b91505092915050565b6000602082840312156142f857600080fd5b600061430684828501613ed9565b91505092915050565b6000806040838503121561432257600080fd5b600061433085828601613ed9565b925050602083013567ffffffffffffffff81111561434d57600080fd5b61435985828601613f18565b9150509250929050565b60006020828403121561437557600080fd5b600061438384828501613eee565b91505092915050565b60006020828403121561439e57600080fd5b60006143ac84828501613f03565b91505092915050565b6000602082840312156143c757600080fd5b600082013567ffffffffffffffff8111156143e157600080fd5b6143ed84828501613f18565b91505092915050565b60006020828403121561440857600080fd5b600082013567ffffffffffffffff81111561442257600080fd5b61442e84828501613f42565b91505092915050565b60006020828403121561444957600080fd5b600082015167ffffffffffffffff81111561446357600080fd5b61446f84828501613f6c565b91505092915050565b60006020828403121561448a57600080fd5b600061449884828501613f96565b91505092915050565b600080604083850312156144b457600080fd5b60006144c285828601613f96565b92505060206144d385828601613f96565b9150509250929050565b60006144e9838361450d565b60208301905092915050565b60006145018383614c66565b60208301905092915050565b6145168161548e565b82525050565b6145258161548e565b82525050565b61453c6145378261548e565b61561f565b82525050565b600061454d826152e4565b614557818561532a565b9350614562836152c4565b8060005b8381101561459357815161457a88826144dd565b975061458583615310565b925050600181019050614566565b5085935050505092915050565b60006145ab826152ef565b6145b5818561533b565b93506145c0836152d4565b8060005b838110156145f15781516145d888826144f5565b97506145e38361531d565b9250506001810190506145c4565b5085935050505092915050565b614607816154a0565b82525050565b614616816154ac565b82525050565b61462d614628826154ac565b615631565b82525050565b600061463e826152fa565b614648818561534c565b9350614658818560208601615571565b61466181615773565b840191505092915050565b6146758161552c565b82525050565b61468481615550565b82525050565b600061469582615305565b61469f818561535d565b93506146af818560208601615571565b6146b881615773565b840191505092915050565b60006146ce82615305565b6146d8818561536e565b93506146e8818560208601615571565b80840191505092915050565b6000614701601c8361536e565b91507f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000830152601c82019050919050565b600061474160118361535d565b91507f496e76616c6964207369676e61747572650000000000000000000000000000006000830152602082019050919050565b600061478160258361536e565b91507f3c7376672077696474683d22323422206865696768743d22323422207669657760008301527f426f783d220000000000000000000000000000000000000000000000000000006020830152602582019050919050565b60006147e760198361536e565b91507f53796e7468657469632043727970746f50756e6b20666f7220000000000000006000830152601982019050919050565b600061482760118361535d565b91507f494e56414c49445f524543495049454e540000000000000000000000000000006000830152602082019050919050565b600061486760018361536e565b91507f20000000000000000000000000000000000000000000000000000000000000006000830152600182019050919050565b60006148a760028361536e565b91507f227d0000000000000000000000000000000000000000000000000000000000006000830152600282019050919050565b60006148e760148361535d565b91507f496e73756666696369656e74207061796d656e740000000000000000000000006000830152602082019050919050565b600061492760348361536e565b91507f222c20226465736372697074696f6e223a202254686973206973206120756e6960008301527f7175652050756e6b20636c61696d6564206279200000000000000000000000006020830152603482019050919050565b600061498d60108361535d565b91507f554e534146455f524543495049454e54000000000000000000000000000000006000830152602082019050919050565b60006149cd600a8361536e565b91507f7b226e616d65223a2022000000000000000000000000000000000000000000006000830152600a82019050919050565b6000614a0d60288361536e565b91507f2e222c2022696d616765223a2022646174613a696d6167652f7376672b786d6c60008301527f3b6261736536342c0000000000000000000000000000000000000000000000006020830152602882019050919050565b6000614a73601d8361536e565b91507f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000006000830152601d82019050919050565b6000614ab360148361535d565b91507f4f6666736574206f7574206f6620626f756e64730000000000000000000000006000830152602082019050919050565b6000614af360008361534c565b9150600082019050919050565b6000614b0d602d8361536e565b91507f203234203234223e3c75736520687265663d222373707269746573686565742260008301527f3e3c2f7573653e3c2f7376673e000000000000000000000000000000000000006020830152602d82019050919050565b6000614b7360188361535d565b91507f696e76616c6964207369676e6174757265206c656e67746800000000000000006000830152602082019050919050565b6000614bb3600e8361535d565b91507f414c52454144595f4d494e5445440000000000000000000000000000000000006000830152602082019050919050565b6000614bf3600e8361535d565b91507f4e4f545f415554484f52495a45440000000000000000000000000000000000006000830152602082019050919050565b6000614c33600a8361535d565b91507f57524f4e475f46524f4d000000000000000000000000000000000000000000006000830152602082019050919050565b614c6f81615515565b82525050565b614c7e81615515565b82525050565b614c95614c9082615515565b61564d565b82525050565b614ca48161551f565b82525050565b6000614cb6828461452b565b60148201915081905092915050565b6000614cd1828561452b565b601482019150614ce18284614c84565b6020820191508190509392505050565b6000614cfd82846146c3565b915081905092915050565b6000614d1482886146c3565b9150614d2082876146c3565b9150614d2c82866146c3565b9150614d3882856146c3565b9150614d4482846146c3565b91508190509695505050505050565b6000614d5f82866146c3565b9150614d6a82614774565b9150614d7682856146c3565b9150614d818261485a565b9150614d8d82846146c3565b9150614d9882614b00565b9150819050949350505050565b6000614db0826146f4565b9150614dbc828461461c565b60208201915081905092915050565b6000614dd6826149c0565b9150614de1826147da565b9150614ded82866146c3565b9150614df88261491a565b9150614e0482856146c3565b9150614e0f82614a00565b9150614e1b82846146c3565b9150614e268261489a565b9150819050949350505050565b6000614e3e82614a66565b9150614e4a82846146c3565b915081905092915050565b6000602082019050614e6a600083018461451c565b92915050565b6000608082019050614e85600083018761451c565b614e92602083018661451c565b614e9f6040830185614c75565b8181036060830152614eb18184614633565b905095945050505050565b6000608082019050614ed1600083018661451c565b614ede602083018561451c565b614eeb6040830184614c75565b8181036060830152614efc81614ae6565b9050949350505050565b60006020820190508181036000830152614f208184614542565b905092915050565b60006020820190508181036000830152614f4281846145a0565b905092915050565b6000602082019050614f5f60008301846145fe565b92915050565b6000602082019050614f7a600083018461460d565b92915050565b6000606082019050614f95600083018661460d565b614fa2602083018561460d565b614faf6040830184614c9b565b949350505050565b6000608082019050614fcc600083018761460d565b614fd96020830186614c9b565b614fe6604083018561460d565b614ff3606083018461460d565b95945050505050565b6000602082019050615011600083018461466c565b92915050565b600060208201905061502c600083018461467b565b92915050565b6000602082019050818103600083015261504c818461468a565b905092915050565b6000602082019050818103600083015261506d81614734565b9050919050565b6000602082019050818103600083015261508d8161481a565b9050919050565b600060208201905081810360008301526150ad816148da565b9050919050565b600060208201905081810360008301526150cd81614980565b9050919050565b600060208201905081810360008301526150ed81614aa6565b9050919050565b6000602082019050818103600083015261510d81614b66565b9050919050565b6000602082019050818103600083015261512d81614ba6565b9050919050565b6000602082019050818103600083015261514d81614be6565b9050919050565b6000602082019050818103600083015261516d81614c26565b9050919050565b60006020820190506151896000830184614c75565b92915050565b6000604051905081810181811067ffffffffffffffff821117156151b6576151b5615744565b5b8060405250919050565b600067ffffffffffffffff8211156151db576151da615744565b5b602082029050919050565b600067ffffffffffffffff82111561520157615200615744565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561522d5761522c615744565b5b602082029050919050565b600067ffffffffffffffff82111561525357615252615744565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561527f5761527e615744565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156152af576152ae615744565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061538482615515565b915061538f83615515565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156153c4576153c3615688565b5b828201905092915050565b60006153da82615515565b91506153e583615515565b9250826153f5576153f46156b7565b5b828204905092915050565b600061540b82615515565b915061541683615515565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561544f5761544e615688565b5b828202905092915050565b600061546582615515565b915061547083615515565b92508282101561548357615482615688565b5b828203905092915050565b6000615499826154f5565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60008190506154f082615791565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006155378261553e565b9050919050565b6000615549826154f5565b9050919050565b600061555b826154e2565b9050919050565b82818337600083830152505050565b60005b8381101561558f578082015181840152602081019050615574565b8381111561559e576000848401525b50505050565b600060028204905060018216806155bc57607f821691505b602082108114156155d0576155cf615715565b5b50919050565b60006155e182615515565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561561457615613615688565b5b600182019050919050565b600061562a8261563b565b9050919050565b6000819050919050565b600061564682615784565b9050919050565b6000819050919050565b600061566282615515565b915061566d83615515565b92508261567d5761567c6156b7565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b600281106157a2576157a16156e6565b5b50565b6157ae8161548e565b81146157b957600080fd5b50565b6157c5816154a0565b81146157d057600080fd5b50565b6157dc816154ac565b81146157e757600080fd5b50565b6157f3816154b6565b81146157fe57600080fd5b50565b61580a81615515565b811461581557600080fd5b5056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f223e3c2f696d6167653e3c2f7376673e3c2f646566733e3c7376672069643d2270756e6b223e3c7376672076696577426f783d22302030203234203234222077696474683d22313030302220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f73766722203e3c646566733e3c7374796c653e237370726974657368656574207b20696d6167652d72656e646572696e673a202d7765626b69742d6f7074696d697a652d636f6e74726173743b20696d6167652d72656e646572696e673a2063726973702d65646765733b20696d6167652d72656e646572696e673a20706978656c617465643b207d202370756e6b207b2066696c7465723a2064726f702d736861646f77283070782030707820353070782072676228302c203235352c203136362c20302e3729293b207d20737667207b206261636b67726f756e64203a20233641393438303b207d3c2f7374796c653e3c7376672077696474683d22323422206865696768743d223234222076696577426f783d2234382030203234203234223e3c696d6167652069643d22737072697465736865657422207072657365727665417370656374526174696f3d22784d696e594d696e20736c6963652220687265663d22a26469706673582212203dc3113fe3a01c3e08c6b0586a95c931c864cdd362832804d2db45f7c630285c64736f6c63430008000033",
  "deployedBytecode": "0x60806040526004361061020f5760003560e01c806378619bdf11610118578063b88d4fde116100a0578063d61b051b1161006f578063d61b051b1461082f578063e06d2eb51461086c578063e985e9c5146108a9578063fa540801146108e6578063fe0bc600146109235761020f565b8063b88d4fde1461074f578063b93f9b0a14610778578063c87b56dd146107b5578063c884ef83146107f25761020f565b80639d4776b2116100e75780639d4776b214610651578063a22cb4651461066d578063a7bb580314610696578063af4fb353146106d5578063b446f3b2146107125761020f565b806378619bdf1461056f57806385d940ec146105ac57806395d89b41146105e957806397aba7f9146106145761020f565b80633ccfd60b1161019b5780636352211e1161016a5780636352211e1461045057806363f8071c1461048d57806370a08231146104ca57806371a97305146105075780637685945e146105325761020f565b80633ccfd60b146103c957806342842e0e146103e05780634378a6e3146104095780634e71d92d146104465761020f565b80631581b600116101e25780631581b600146102e257806315d655c91461030d57806323b872dd146103385780632dd34f0f146103615780633b85df721461039e5761020f565b806301ffc9a71461021457806306fdde0314610251578063081812fc1461027c578063095ea7b3146102b9575b600080fd5b34801561022057600080fd5b5061023b60048036038101906102369190614363565b610960565b6040516102489190614f4a565b60405180910390f35b34801561025d57600080fd5b506102666109f2565b6040516102739190615032565b60405180910390f35b34801561028857600080fd5b506102a3600480360381019061029e9190614478565b610a80565b6040516102b09190614e55565b60405180910390f35b3480156102c557600080fd5b506102e060048036038101906102db91906141fe565b610ab3565b005b3480156102ee57600080fd5b506102f7610c9c565b6040516103049190614e55565b60405180910390f35b34801561031957600080fd5b50610322610cc0565b60405161032f9190615174565b60405180910390f35b34801561034457600080fd5b5061035f600480360381019061035a9190614025565b610ce4565b005b34801561036d57600080fd5b506103886004803603810190610383919061417f565b6110e4565b6040516103959190614f4a565b60405180910390f35b3480156103aa57600080fd5b506103b3611142565b6040516103c09190615032565b60405180910390f35b3480156103d557600080fd5b506103de61117b565b005b3480156103ec57600080fd5b5061040760048036038101906104029190614025565b6111e4565b005b34801561041557600080fd5b50610430600480360381019061042b9190614478565b611347565b60405161043d9190614f28565b60405180910390f35b61044e611483565b005b34801561045c57600080fd5b5061047760048036038101906104729190614478565b6115d4565b6040516104849190614e55565b60405180910390f35b34801561049957600080fd5b506104b460048036038101906104af9190613fc0565b611607565b6040516104c19190615174565b60405180910390f35b3480156104d657600080fd5b506104f160048036038101906104ec9190613fc0565b611627565b6040516104fe9190615174565b60405180910390f35b34801561051357600080fd5b5061051c61163f565b6040516105299190614ffc565b60405180910390f35b34801561053e57600080fd5b50610559600480360381019061055491906144a1565b611665565b6040516105669190615174565b60405180910390f35b34801561057b57600080fd5b50610596600480360381019061059191906142a5565b6119c3565b6040516105a39190615032565b60405180910390f35b3480156105b857600080fd5b506105d360048036038101906105ce9190614478565b611f8e565b6040516105e09190614f28565b60405180910390f35b3480156105f557600080fd5b506105fe61261e565b60405161060b9190615032565b60405180910390f35b34801561062057600080fd5b5061063b6004803603810190610636919061430f565b6126ac565b6040516106489190614e55565b60405180910390f35b61066b6004803603810190610666919061412b565b61271b565b005b34801561067957600080fd5b50610694600480360381019061068f91906140ef565b6128ed565b005b3480156106a257600080fd5b506106bd60048036038101906106b891906143b5565b6129ea565b6040516106cc93929190614f80565b60405180910390f35b3480156106e157600080fd5b506106fc60048036038101906106f79190613fc0565b612a52565b6040516107099190615032565b60405180910390f35b34801561071e57600080fd5b50610739600480360381019061073491906143f6565b612a6c565b6040516107469190614f65565b60405180910390f35b34801561075b57600080fd5b5061077660048036038101906107719190614074565b612a9c565b005b34801561078457600080fd5b5061079f600480360381019061079a9190614478565b612c02565b6040516107ac9190614e55565b60405180910390f35b3480156107c157600080fd5b506107dc60048036038101906107d79190614478565b612c0c565b6040516107e99190615032565b60405180910390f35b3480156107fe57600080fd5b5061081960048036038101906108149190613fc0565b612cc3565b6040516108269190614f4a565b60405180910390f35b34801561083b57600080fd5b50610856600480360381019061085191906144a1565b612ce3565b6040516108639190615174565b60405180910390f35b34801561087857600080fd5b50610893600480360381019061088e9190614478565b612d92565b6040516108a09190615017565b60405180910390f35b3480156108b557600080fd5b506108d060048036038101906108cb9190613fe9565b612dc2565b6040516108dd9190614f4a565b60405180910390f35b3480156108f257600080fd5b5061090d600480360381019061090891906142e6565b612df1565b60405161091a9190614f65565b60405180910390f35b34801561092f57600080fd5b5061094a60048036038101906109459190613fc0565b612e21565b6040516109579190614f28565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806109bb57506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806109eb5750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600080546109ff906155a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2b906155a4565b8015610a785780601f10610a4d57610100808354040283529160200191610a78565b820191906000526020600020905b815481529060010190602001808311610a5b57829003601f168201915b505050505081565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610bab5750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610bea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be190615134565b60405180910390fd5b826004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610d85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7c90615154565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610df5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dec90615074565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e8d57506004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80610f1e5750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610f5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5490615134565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000806110f084612a6c565b905060006110fd82612df1565b90508573ffffffffffffffffffffffffffffffffffffffff1661112082866126ac565b73ffffffffffffffffffffffffffffffffffffffff1614925050509392505050565b6040518060400160405280601f81526020017f4d65737361676520746f20636c61696d2053796e7468657469632050756e6b0081525081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156111e1573d6000803e3d6000fd5b50565b6111ef838383610ce4565b60008273ffffffffffffffffffffffffffffffffffffffff16803b806020016040519081016040528181526000908060200190933c511480611303575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a023386856040518463ffffffff1660e01b815260040161129093929190614ebc565b602060405180830381600087803b1580156112aa57600080fd5b505af11580156112be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e2919061438c565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b611342576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611339906150b4565b60405180910390fd5b505050565b6060600061135483611f8e565b90506000815167ffffffffffffffff811115611399577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156113c75781602001602082028036833780820191505090505b50905060005b82518110156114785761142085848381518110611413577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151611665565b828281518110611459577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508080611470906155d6565b9150506113cd565b508092505050919050565b7f00000000000000000000000000000000000000000000000000000000000000003410156114e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114dd90615094565b60405180910390fd5b6114f8336114f333611607565b612e3b565b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060007f00000000000000000000000000000000000000000000000000000000000000003461157e919061545a565b905060008111156115d1573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156115cf573d6000803e3d6000fd5b505b50565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff169050919050565b60026020528060005260406000206000915090505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a161b7c6040518163ffffffff1660e01b81526004016104806040518083038186803b1580156116d157600080fd5b505afa1580156116e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611709919061423a565b8360098110611741577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201519050600061175385612d92565b905060018081111561178e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160018111156117c7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156118c75781600160048110611807577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015182600360048110611846577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151611855919061545a565b61186b8686600a6118669190615379565b612ce3565b6118759190615657565b826001600481106118af577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516118be9190615379565b925050506119bd565b81600060048110611901577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015182600260048110611940577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015161194f919061545a565b6119658686600a6119609190615379565b612ce3565b61196f9190615657565b826000600481106119a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516119b89190615379565b925050505b92915050565b60606000604051806101e001604052806101aa815260200161587f6101aa91399050600060405180606001604052806026815260200161585960269139905060006040518060400160405280600c81526020017f3c2f7376673e3c2f7376673e00000000000000000000000000000000000000008152509050600060405180602001604052806000815250905060005b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a161b7c6040518163ffffffff1660e01b81526004016104806040518083038186803b158015611abc57600080fd5b505afa158015611ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611af4919061423a565b506009811015611eb65760005b8751811015611ea257878181518110611b43577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a161b7c6040518163ffffffff1660e01b81526004016104806040518083038186803b158015611bb457600080fd5b505afa158015611bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bec919061423a565b8360098110611c24577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151600060048110611c62577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015111158015611dcf5750600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a161b7c6040518163ffffffff1660e01b81526004016104806040518083038186803b158015611cd957600080fd5b505afa158015611ced573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d11919061423a565b8260098110611d49577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151600360048110611d87577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151888281518110611dc5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151105b15611e8f576000888281518110611e0f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050600060188083611e299190615657565b611e339190615400565b9050600060188084611e4591906153cf565b611e4f9190615400565b905085611e5b83612f9d565b611e6483612f9d565b604051602001611e7693929190614d53565b6040516020818303038152906040529550505050611ea2565b8080611e9a906155d6565b915050611b01565b508080611eae906155d6565b915050611a53565b5083600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166360787be36040518163ffffffff1660e01b815260040160006040518083038186803b158015611f2057600080fd5b505afa158015611f34573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611f5d9190614437565b848385604051602001611f74959493929190614d08565b604051602081830303815290604052945050505050919050565b60606000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a161b7c6040518163ffffffff1660e01b81526004016104806040518083038186803b158015611ffb57600080fd5b505afa15801561200f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612033919061423a565b9050600060036009612045919061545a565b612050856001612ce3565b61205a9190615657565b60026120669190615379565b905060008167ffffffffffffffff8111156120aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156120d85781602001602082028036833780820191505090505b5090506000805b838110156124985760006001600260096120f9919061545a565b61210f8a85600261210a9190615379565b612ce3565b6121199190615657565b6121239190615379565b9050600061213185836130a6565b90508015612140575050612485565b600180811115612179577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6121828a612d92565b60018111156121ba577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156123235760008783600981106121fb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151600160048110612239577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151888460098110612277577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516003600481106122b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516122c4919061545a565b1461231e5781858581518110612303577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050838061231a906155d6565b9450505b612482565b600087836009811061235e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015160006004811061239c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518884600981106123da577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151600260048110612418577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151612427919061545a565b146124815781858581518110612466577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050838061247d906155d6565b9450505b5b50505b8080612490906155d6565b9150506120df565b5060006001826124a89190615379565b67ffffffffffffffff8111156124e7577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156125155781602001602082028036833780820191505090505b509050600081600081518110612554577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505060005b82811015612610578381815181106125a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151826001836125ba9190615379565b815181106125f1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508080612608906155d6565b915050612563565b508095505050505050919050565b6001805461262b906155a4565b80601f0160208091040260200160405190810160405280929190818152602001828054612657906155a4565b80156126a45780601f10612679576101008083540402835291602001916126a4565b820191906000526020600020905b81548152906001019060200180831161268757829003601f168201915b505050505081565b6000806000806126bb856129ea565b925092509250600186828585604051600081526020016040526040516126e49493929190614fb7565b6020604051602081039080840390855afa158015612706573d6000803e3d6000fd5b50505060206040510351935050505092915050565b7f000000000000000000000000000000000000000000000000000000000000000034101561277e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161277590615094565b60405180910390fd5b6127be826040518060400160405280601f81526020017f4d65737361676520746f20636c61696d2053796e7468657469632050756e6b00815250836110e4565b6127fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127f490615054565b60405180910390fd5b61280f3361280a84611607565b612e3b565b6001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060007f000000000000000000000000000000000000000000000000000000000000000034612895919061545a565b905060008111156128e8578273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156128e6573d6000803e3d6000fd5b505b505050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516129de9190614f4a565b60405180910390a35050565b60008060006041845114612a33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a2a906150f4565b60405180910390fd5b6020840151925060408401519150606084015160001a90509193909250565b6060612a65612a6083611607565b612c0c565b9050919050565b600081604051602001612a7f9190614cf1565b604051602081830303815290604052805190602001209050919050565b612aa7848484610ce4565b60008373ffffffffffffffffffffffffffffffffffffffff16803b806020016040519081016040528181526000908060200190933c511480612bbd575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168373ffffffffffffffffffffffffffffffffffffffff1663150b7a02338786866040518563ffffffff1660e01b8152600401612b4a9493929190614e70565b602060405180830381600087803b158015612b6457600080fd5b505af1158015612b78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b9c919061438c565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b612bfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bf3906150b4565b60405180910390fd5b50505050565b6000819050919050565b60606000612c1983611347565b90506000612c26826119c3565b90506000612c3385612c02565b90506000612c4082613128565b9050600080825114612c525781612c5c565b612c5b8361336b565b5b90506000612c948283612c6e8861339c565b604051602001612c8093929190614dcb565b60405160208183030381529060405261339c565b905080604051602001612ca79190614e33565b6040516020818303038152906040529650505050505050919050565b60076020528060005260406000206000915054906101000a900460ff1681565b600060208210612d28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d1f906150d4565b60405180910390fd5b60003084604051602001612d3d929190614cc5565b6040516020818303038152906040528051906020012090506000600884612d649190615400565b60ff901b60001b90506000600885612d7c9190615400565b828416901c60001c905080935050505092915050565b6000806002612da2846000612ce3565b612dac9190615657565b14612db8576001612dbb565b60005b9050919050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600081604051602001612e049190614da5565b604051602081830303815290604052805190602001209050919050565b6060612e34612e2f83611607565b611347565b9050919050565b612e458282613561565b60008273ffffffffffffffffffffffffffffffffffffffff16803b806020016040519081016040528181526000908060200190933c511480612f5a575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a02336000856040518463ffffffff1660e01b8152600401612ee793929190614ebc565b602060405180830381600087803b158015612f0157600080fd5b505af1158015612f15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f39919061438c565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b612f99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f90906150b4565b60405180910390fd5b5050565b60606000604e90506000603090506000841415612ff3576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250925050506130a1565b8167ffffffffffffffff811115613033577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156130655781602001600182028036833780820191505090505b50925060008290505b6000851461309357600a850682018082860152600182039150600a860495505061306e565b808401935080830384525050505b919050565b600080600090505b835181101561311c57828482815181106130f1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101511415613109576001915050613122565b8080613114906155d6565b9150506130ae565b50600090505b92915050565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff16141561318457613366565b60007f000000000000000000000000000000000000000000000000000000000000000090506000600167ffffffffffffffff8111156131ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561321a5781602001602082028036833780820191505090505b5090508381600081518110613258577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1663cbf8b66c826040518263ffffffff1660e01b81526004016132cb9190614f06565b60006040518083038186803b1580156132e357600080fd5b505afa1580156132f7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906133209190614264565b600081518110613359577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151925050505b919050565b6060613395826040516020016133819190614caa565b604051602081830303815290604052613774565b9050919050565b6060600060405180606001604052806040815260200161581960409139905060008351905060008114156133e357604051806020016040528060008152509250505061355c565b600060036002836133f49190615379565b6133fe91906153cf565b600461340a9190615400565b9050600060208261341b9190615379565b67ffffffffffffffff81111561345a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561348c5781602001600182028036833780820191505090505b5090506000849050600181016020830160005b868110156135185760038101905062ffffff818b015116603f8160121c168401518060081b905060ff603f83600c1c1686015116810190508060081b905060ff603f8360061c1686015116810190508060081b905060ff603f831686015116810190508060e01b9050808452600484019350505061349f565b50600386066001811461353257600281146135425761354d565b613d3d60f01b600283035261354d565b603d60f81b60018303525b50848452505081955050505050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156135d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016135c890615074565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161366a90615114565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b606060006040518060400160405280601081526020017f303132333435363738396162636465660000000000000000000000000000000081525090506000600284516137c09190615400565b60026137cc9190615379565b67ffffffffffffffff81111561380b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561383d5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061389b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110613925577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060005b8451811015613bb95782600486838151811061399c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60f81c60ff1681518110613a08577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b82600283613a219190615400565b6002613a2d9190615379565b81518110613a64577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535082600f60f81b868381518110613ad2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b1660f81c60ff1681518110613b1b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b82600283613b349190615400565b6003613b409190615379565b81518110613b77577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080613bb1906155d6565b915050613957565b508092505050919050565b6000613bd7613bd2846151c0565b61518f565b90508082856080860282011115613bed57600080fd5b60005b85811015613c1d5781613c038882613e73565b845260208401935060808301925050600181019050613bf0565b5050509392505050565b6000613c3a613c35846151e6565b61518f565b9050808382526020820190508260005b85811015613c7a5781518501613c608882613f6c565b845260208401935060208301925050600181019050613c4a565b5050509392505050565b6000613c97613c9284615212565b61518f565b90508082856020860282011115613cad57600080fd5b60005b85811015613cdd5781613cc38882613fab565b845260208401935060208301925050600181019050613cb0565b5050509392505050565b6000613cfa613cf584615238565b61518f565b90508083825260208201905082856020860282011115613d1957600080fd5b60005b85811015613d495781613d2f8882613f96565b845260208401935060208301925050600181019050613d1c565b5050509392505050565b6000613d66613d6184615264565b61518f565b905082815260208101848484011115613d7e57600080fd5b613d89848285615562565b509392505050565b6000613da4613d9f84615294565b61518f565b905082815260208101848484011115613dbc57600080fd5b613dc7848285615562565b509392505050565b6000613de2613ddd84615294565b61518f565b905082815260208101848484011115613dfa57600080fd5b613e05848285615571565b509392505050565b600081359050613e1c816157a5565b92915050565b600082601f830112613e3357600080fd5b6009613e40848285613bc4565b91505092915050565b600082601f830112613e5a57600080fd5b8151613e6a848260208601613c27565b91505092915050565b600082601f830112613e8457600080fd5b6004613e91848285613c84565b91505092915050565b600082601f830112613eab57600080fd5b8135613ebb848260208601613ce7565b91505092915050565b600081359050613ed3816157bc565b92915050565b600081359050613ee8816157d3565b92915050565b600081359050613efd816157ea565b92915050565b600081519050613f12816157ea565b92915050565b600082601f830112613f2957600080fd5b8135613f39848260208601613d53565b91505092915050565b600082601f830112613f5357600080fd5b8135613f63848260208601613d91565b91505092915050565b600082601f830112613f7d57600080fd5b8151613f8d848260208601613dcf565b91505092915050565b600081359050613fa581615801565b92915050565b600081519050613fba81615801565b92915050565b600060208284031215613fd257600080fd5b6000613fe084828501613e0d565b91505092915050565b60008060408385031215613ffc57600080fd5b600061400a85828601613e0d565b925050602061401b85828601613e0d565b9150509250929050565b60008060006060848603121561403a57600080fd5b600061404886828701613e0d565b935050602061405986828701613e0d565b925050604061406a86828701613f96565b9150509250925092565b6000806000806080858703121561408a57600080fd5b600061409887828801613e0d565b94505060206140a987828801613e0d565b93505060406140ba87828801613f96565b925050606085013567ffffffffffffffff8111156140d757600080fd5b6140e387828801613f18565b91505092959194509250565b6000806040838503121561410257600080fd5b600061411085828601613e0d565b925050602061412185828601613ec4565b9150509250929050565b6000806040838503121561413e57600080fd5b600061414c85828601613e0d565b925050602083013567ffffffffffffffff81111561416957600080fd5b61417585828601613f18565b9150509250929050565b60008060006060848603121561419457600080fd5b60006141a286828701613e0d565b935050602084013567ffffffffffffffff8111156141bf57600080fd5b6141cb86828701613f42565b925050604084013567ffffffffffffffff8111156141e857600080fd5b6141f486828701613f18565b9150509250925092565b6000806040838503121561421157600080fd5b600061421f85828601613e0d565b925050602061423085828601613f96565b9150509250929050565b6000610480828403121561424d57600080fd5b600061425b84828501613e22565b91505092915050565b60006020828403121561427657600080fd5b600082015167ffffffffffffffff81111561429057600080fd5b61429c84828501613e49565b91505092915050565b6000602082840312156142b757600080fd5b600082013567ffffffffffffffff8111156142d157600080fd5b6142dd84828501613e9a565b91505092915050565b6000602082840312156142f857600080fd5b600061430684828501613ed9565b91505092915050565b6000806040838503121561432257600080fd5b600061433085828601613ed9565b925050602083013567ffffffffffffffff81111561434d57600080fd5b61435985828601613f18565b9150509250929050565b60006020828403121561437557600080fd5b600061438384828501613eee565b91505092915050565b60006020828403121561439e57600080fd5b60006143ac84828501613f03565b91505092915050565b6000602082840312156143c757600080fd5b600082013567ffffffffffffffff8111156143e157600080fd5b6143ed84828501613f18565b91505092915050565b60006020828403121561440857600080fd5b600082013567ffffffffffffffff81111561442257600080fd5b61442e84828501613f42565b91505092915050565b60006020828403121561444957600080fd5b600082015167ffffffffffffffff81111561446357600080fd5b61446f84828501613f6c565b91505092915050565b60006020828403121561448a57600080fd5b600061449884828501613f96565b91505092915050565b600080604083850312156144b457600080fd5b60006144c285828601613f96565b92505060206144d385828601613f96565b9150509250929050565b60006144e9838361450d565b60208301905092915050565b60006145018383614c66565b60208301905092915050565b6145168161548e565b82525050565b6145258161548e565b82525050565b61453c6145378261548e565b61561f565b82525050565b600061454d826152e4565b614557818561532a565b9350614562836152c4565b8060005b8381101561459357815161457a88826144dd565b975061458583615310565b925050600181019050614566565b5085935050505092915050565b60006145ab826152ef565b6145b5818561533b565b93506145c0836152d4565b8060005b838110156145f15781516145d888826144f5565b97506145e38361531d565b9250506001810190506145c4565b5085935050505092915050565b614607816154a0565b82525050565b614616816154ac565b82525050565b61462d614628826154ac565b615631565b82525050565b600061463e826152fa565b614648818561534c565b9350614658818560208601615571565b61466181615773565b840191505092915050565b6146758161552c565b82525050565b61468481615550565b82525050565b600061469582615305565b61469f818561535d565b93506146af818560208601615571565b6146b881615773565b840191505092915050565b60006146ce82615305565b6146d8818561536e565b93506146e8818560208601615571565b80840191505092915050565b6000614701601c8361536e565b91507f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000830152601c82019050919050565b600061474160118361535d565b91507f496e76616c6964207369676e61747572650000000000000000000000000000006000830152602082019050919050565b600061478160258361536e565b91507f3c7376672077696474683d22323422206865696768743d22323422207669657760008301527f426f783d220000000000000000000000000000000000000000000000000000006020830152602582019050919050565b60006147e760198361536e565b91507f53796e7468657469632043727970746f50756e6b20666f7220000000000000006000830152601982019050919050565b600061482760118361535d565b91507f494e56414c49445f524543495049454e540000000000000000000000000000006000830152602082019050919050565b600061486760018361536e565b91507f20000000000000000000000000000000000000000000000000000000000000006000830152600182019050919050565b60006148a760028361536e565b91507f227d0000000000000000000000000000000000000000000000000000000000006000830152600282019050919050565b60006148e760148361535d565b91507f496e73756666696369656e74207061796d656e740000000000000000000000006000830152602082019050919050565b600061492760348361536e565b91507f222c20226465736372697074696f6e223a202254686973206973206120756e6960008301527f7175652050756e6b20636c61696d6564206279200000000000000000000000006020830152603482019050919050565b600061498d60108361535d565b91507f554e534146455f524543495049454e54000000000000000000000000000000006000830152602082019050919050565b60006149cd600a8361536e565b91507f7b226e616d65223a2022000000000000000000000000000000000000000000006000830152600a82019050919050565b6000614a0d60288361536e565b91507f2e222c2022696d616765223a2022646174613a696d6167652f7376672b786d6c60008301527f3b6261736536342c0000000000000000000000000000000000000000000000006020830152602882019050919050565b6000614a73601d8361536e565b91507f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000006000830152601d82019050919050565b6000614ab360148361535d565b91507f4f6666736574206f7574206f6620626f756e64730000000000000000000000006000830152602082019050919050565b6000614af360008361534c565b9150600082019050919050565b6000614b0d602d8361536e565b91507f203234203234223e3c75736520687265663d222373707269746573686565742260008301527f3e3c2f7573653e3c2f7376673e000000000000000000000000000000000000006020830152602d82019050919050565b6000614b7360188361535d565b91507f696e76616c6964207369676e6174757265206c656e67746800000000000000006000830152602082019050919050565b6000614bb3600e8361535d565b91507f414c52454144595f4d494e5445440000000000000000000000000000000000006000830152602082019050919050565b6000614bf3600e8361535d565b91507f4e4f545f415554484f52495a45440000000000000000000000000000000000006000830152602082019050919050565b6000614c33600a8361535d565b91507f57524f4e475f46524f4d000000000000000000000000000000000000000000006000830152602082019050919050565b614c6f81615515565b82525050565b614c7e81615515565b82525050565b614c95614c9082615515565b61564d565b82525050565b614ca48161551f565b82525050565b6000614cb6828461452b565b60148201915081905092915050565b6000614cd1828561452b565b601482019150614ce18284614c84565b6020820191508190509392505050565b6000614cfd82846146c3565b915081905092915050565b6000614d1482886146c3565b9150614d2082876146c3565b9150614d2c82866146c3565b9150614d3882856146c3565b9150614d4482846146c3565b91508190509695505050505050565b6000614d5f82866146c3565b9150614d6a82614774565b9150614d7682856146c3565b9150614d818261485a565b9150614d8d82846146c3565b9150614d9882614b00565b9150819050949350505050565b6000614db0826146f4565b9150614dbc828461461c565b60208201915081905092915050565b6000614dd6826149c0565b9150614de1826147da565b9150614ded82866146c3565b9150614df88261491a565b9150614e0482856146c3565b9150614e0f82614a00565b9150614e1b82846146c3565b9150614e268261489a565b9150819050949350505050565b6000614e3e82614a66565b9150614e4a82846146c3565b915081905092915050565b6000602082019050614e6a600083018461451c565b92915050565b6000608082019050614e85600083018761451c565b614e92602083018661451c565b614e9f6040830185614c75565b8181036060830152614eb18184614633565b905095945050505050565b6000608082019050614ed1600083018661451c565b614ede602083018561451c565b614eeb6040830184614c75565b8181036060830152614efc81614ae6565b9050949350505050565b60006020820190508181036000830152614f208184614542565b905092915050565b60006020820190508181036000830152614f4281846145a0565b905092915050565b6000602082019050614f5f60008301846145fe565b92915050565b6000602082019050614f7a600083018461460d565b92915050565b6000606082019050614f95600083018661460d565b614fa2602083018561460d565b614faf6040830184614c9b565b949350505050565b6000608082019050614fcc600083018761460d565b614fd96020830186614c9b565b614fe6604083018561460d565b614ff3606083018461460d565b95945050505050565b6000602082019050615011600083018461466c565b92915050565b600060208201905061502c600083018461467b565b92915050565b6000602082019050818103600083015261504c818461468a565b905092915050565b6000602082019050818103600083015261506d81614734565b9050919050565b6000602082019050818103600083015261508d8161481a565b9050919050565b600060208201905081810360008301526150ad816148da565b9050919050565b600060208201905081810360008301526150cd81614980565b9050919050565b600060208201905081810360008301526150ed81614aa6565b9050919050565b6000602082019050818103600083015261510d81614b66565b9050919050565b6000602082019050818103600083015261512d81614ba6565b9050919050565b6000602082019050818103600083015261514d81614be6565b9050919050565b6000602082019050818103600083015261516d81614c26565b9050919050565b60006020820190506151896000830184614c75565b92915050565b6000604051905081810181811067ffffffffffffffff821117156151b6576151b5615744565b5b8060405250919050565b600067ffffffffffffffff8211156151db576151da615744565b5b602082029050919050565b600067ffffffffffffffff82111561520157615200615744565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561522d5761522c615744565b5b602082029050919050565b600067ffffffffffffffff82111561525357615252615744565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561527f5761527e615744565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156152af576152ae615744565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061538482615515565b915061538f83615515565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156153c4576153c3615688565b5b828201905092915050565b60006153da82615515565b91506153e583615515565b9250826153f5576153f46156b7565b5b828204905092915050565b600061540b82615515565b915061541683615515565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561544f5761544e615688565b5b828202905092915050565b600061546582615515565b915061547083615515565b92508282101561548357615482615688565b5b828203905092915050565b6000615499826154f5565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60008190506154f082615791565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006155378261553e565b9050919050565b6000615549826154f5565b9050919050565b600061555b826154e2565b9050919050565b82818337600083830152505050565b60005b8381101561558f578082015181840152602081019050615574565b8381111561559e576000848401525b50505050565b600060028204905060018216806155bc57607f821691505b602082108114156155d0576155cf615715565b5b50919050565b60006155e182615515565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561561457615613615688565b5b600182019050919050565b600061562a8261563b565b9050919050565b6000819050919050565b600061564682615784565b9050919050565b6000819050919050565b600061566282615515565b915061566d83615515565b92508261567d5761567c6156b7565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b600281106157a2576157a16156e6565b5b50565b6157ae8161548e565b81146157b957600080fd5b50565b6157c5816154a0565b81146157d057600080fd5b50565b6157dc816154ac565b81146157e757600080fd5b50565b6157f3816154b6565b81146157fe57600080fd5b50565b61580a81615515565b811461581557600080fd5b5056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f223e3c2f696d6167653e3c2f7376673e3c2f646566733e3c7376672069643d2270756e6b223e3c7376672076696577426f783d22302030203234203234222077696474683d22313030302220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f73766722203e3c646566733e3c7374796c653e237370726974657368656574207b20696d6167652d72656e646572696e673a202d7765626b69742d6f7074696d697a652d636f6e74726173743b20696d6167652d72656e646572696e673a2063726973702d65646765733b20696d6167652d72656e646572696e673a20706978656c617465643b207d202370756e6b207b2066696c7465723a2064726f702d736861646f77283070782030707820353070782072676228302c203235352c203136362c20302e3729293b207d20737667207b206261636b67726f756e64203a20233641393438303b207d3c2f7374796c653e3c7376672077696474683d22323422206865696768743d223234222076696577426f783d2234382030203234203234223e3c696d6167652069643d22737072697465736865657422207072657365727665417370656374526174696f3d22784d696e594d696e20736c6963652220687265663d22a26469706673582212203dc3113fe3a01c3e08c6b0586a95c931c864cdd362832804d2db45f7c630285c64736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 28,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 30,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 41,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "balanceOf",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 45,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "ownerOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 49,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "getApproved",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 55,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "isApprovedForAll",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 534,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "assets",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(ISyntheticPunksAssets)1840"
      },
      {
        "astId": 548,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "claimed",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ISyntheticPunksAssets)1840": {
        "encoding": "inplace",
        "label": "contract ISyntheticPunksAssets",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}