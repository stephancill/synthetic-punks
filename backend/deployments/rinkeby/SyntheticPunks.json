{
  "address": "0x24730cE0481D5E949932456881a72Df23FD5F7b7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_assetsAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ensReverseAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "_getAttributes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "_tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "assets",
      "outputs": [
        {
          "internalType": "contract ISyntheticPunksAssets",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimMessage",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "claimOther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "layers",
          "type": "uint256[]"
        }
      ],
      "name": "generatePunkSVG",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_attributeId",
          "type": "uint256"
        }
      ],
      "name": "getAttribute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getAttributeCategories",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getAttributes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_messageHash",
          "type": "bytes32"
        }
      ],
      "name": "getEthSignedMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getGender",
      "outputs": [
        {
          "internalType": "enum SyntheticPunks.Gender",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "getMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getTokenID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "seed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "randomUint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_ethSignedMessageHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "recoverSigner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "splitSignature",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "toString",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "toString",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "value",
          "type": "bytes32"
        }
      ],
      "name": "toString",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x7c6456ec6c4b0c7446b597369d1b7f1c4ee120cd93c13727c6d231238f4d5fe9",
  "receipt": {
    "to": null,
    "from": "0xCC78016816633528Dd4918746D7F016563Ce27FA",
    "contractAddress": "0x24730cE0481D5E949932456881a72Df23FD5F7b7",
    "transactionIndex": 7,
    "gasUsed": "5167730",
    "logsBloom": "0x
    "blockHash": "0xcf551e5a5063377aa2be607826e512b04ae0aedcd5240f57a90b1878cb702c46",
    "transactionHash": "0x7c6456ec6c4b0c7446b597369d1b7f1c4ee120cd93c13727c6d231238f4d5fe9",
    "logs": [],
    "blockNumber": 10161313,
    "cumulativeGasUsed": "5376411",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "Secret Project",
    "sPROJ",
    "0x744B8BD1aB1aE8ED8f798eA0cdf9da84625197Ff",
    "0xCC78016816633528Dd4918746D7F016563Ce27FA",
    "0x196eC7109e127A353B709a20da25052617295F6f"
  ],
  "numDeployments": 4,
  "solcInputHash": "2015d2c826b3de423884e1921e9950e1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_assetsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ensReverseAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"_getAttributes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"_tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"contract ISyntheticPunksAssets\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimMessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"claimOther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"layers\",\"type\":\"uint256[]\"}],\"name\":\"generatePunkSVG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_attributeId\",\"type\":\"uint256\"}],\"name\":\"getAttribute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAttributeCategories\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAttributes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getGender\",\"outputs\":[{\"internalType\":\"enum SyntheticPunks.Gender\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getTokenID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ethSignedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"recoverSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"splitSignature\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SyntheticPunks.sol\":\"SyntheticPunks\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern, minimalist, and gas efficient ERC-721 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\n/// @dev Note that balanceOf does not revert if passed the zero address, in defiance of the ERC.\\nabstract contract ERC721 {\\n    /*///////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 indexed id);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 indexed id);\\n\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                          METADATA STORAGE/LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    function tokenURI(uint256 id) public view virtual returns (string memory);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                            ERC721 STORAGE                        \\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(uint256 => address) public ownerOf;\\n\\n    mapping(uint256 => address) public getApproved;\\n\\n    mapping(address => mapping(address => bool)) public isApprovedForAll;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(string memory _name, string memory _symbol) {\\n        name = _name;\\n        symbol = _symbol;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC721 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 id) public virtual {\\n        address owner = ownerOf[id];\\n\\n        require(msg.sender == owner || isApprovedForAll[owner][msg.sender], \\\"NOT_AUTHORIZED\\\");\\n\\n        getApproved[id] = spender;\\n\\n        emit Approval(owner, spender, id);\\n    }\\n\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        isApprovedForAll[msg.sender][operator] = approved;\\n\\n        emit ApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        require(from == ownerOf[id], \\\"WRONG_FROM\\\");\\n\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(\\n            msg.sender == from || msg.sender == getApproved[id] || isApprovedForAll[from][msg.sender],\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n\\n        // Underflow of the sender's balance is impossible because we check for\\n        // ownership above and the recipient's balance can't realistically overflow.\\n        unchecked {\\n            balanceOf[from]--;\\n\\n            balanceOf[to]++;\\n        }\\n\\n        ownerOf[id] = to;\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(from, to, id);\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC165 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function supportsInterface(bytes4 interfaceId) public pure virtual returns (bool) {\\n        return\\n            interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165\\n            interfaceId == 0x80ac58cd || // ERC165 Interface ID for ERC721\\n            interfaceId == 0x5b5e139f; // ERC165 Interface ID for ERC721Metadata\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 id) internal virtual {\\n        require(to != address(0), \\\"INVALID_RECIPIENT\\\");\\n\\n        require(ownerOf[id] == address(0), \\\"ALREADY_MINTED\\\");\\n\\n        // Counter overflow is incredibly unrealistic.\\n        unchecked {\\n            balanceOf[to]++;\\n        }\\n\\n        ownerOf[id] = to;\\n\\n        emit Transfer(address(0), to, id);\\n    }\\n\\n    function _burn(uint256 id) internal virtual {\\n        address owner = ownerOf[id];\\n\\n        require(ownerOf[id] != address(0), \\\"NOT_MINTED\\\");\\n\\n        // Ownership check above ensures no underflow.\\n        unchecked {\\n            balanceOf[owner]--;\\n        }\\n\\n        delete ownerOf[id];\\n\\n        delete getApproved[id];\\n\\n        emit Transfer(owner, address(0), id);\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL SAFE MINT LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _safeMint(address to, uint256 id) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, \\\"\\\") ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n\\n    function _safeMint(\\n        address to,\\n        uint256 id,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                ERC721TokenReceiver(to).onERC721Received(msg.sender, address(0), id, data) ==\\n                ERC721TokenReceiver.onERC721Received.selector,\\n            \\\"UNSAFE_RECIPIENT\\\"\\n        );\\n    }\\n}\\n\\n/// @notice A generic interface for a contract which properly accepts ERC721 tokens.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\ninterface ERC721TokenReceiver {\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xf97378ab999188b3d5d97037fabbecbc726892c74cba6536899b852eb4756d6a\",\"license\":\"AGPL-3.0-only\"},\"contracts/SyntheticPunks.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"@rari-capital/solmate/src/tokens/ERC721.sol\\\";\\nimport \\\"./interfaces/ISyntheticPunksAssets.sol\\\";\\n\\nabstract contract ReverseRecords {\\n  function getNames(address[] calldata addresses) external view virtual returns (string[] memory r);\\n}\\n\\ncontract SyntheticPunks is ERC721 {\\n\\n  ISyntheticPunksAssets public assets;\\n  uint256 public immutable claimPrice = 0.02 ether;\\n  address public immutable withdrawAddress;\\n  address immutable ensReverseAddress;\\n  string public constant claimMessage = \\\"Message to claim Synthetic Punk\\\";\\n\\n  mapping(address => bool) public claimed;\\n\\n  enum Gender { Male, Female }\\n\\n  constructor(\\n    string memory _name, \\n    string memory _symbol, \\n    address _assetsAddress,\\n    address _withdrawAddress,\\n    address _ensReverseAddress\\n  ) ERC721(_name, _symbol) {\\n    assets = ISyntheticPunksAssets(_assetsAddress);\\n    withdrawAddress = _withdrawAddress;\\n    ensReverseAddress = _ensReverseAddress;\\n  }\\n\\n  function claim() public payable {\\n    require(msg.value >= claimPrice, \\\"Insufficient payment\\\");\\n    _safeMint(msg.sender, getTokenID(msg.sender));\\n    claimed[msg.sender] = true;\\n    uint256 refund = msg.value - claimPrice;\\n    if (refund > 0) {\\n      payable(msg.sender).transfer(refund);\\n    }\\n  }\\n\\n  function claimOther(address _signer, bytes memory _signature) public payable {\\n    require(msg.value >= claimPrice, \\\"Insufficient payment\\\");\\n    require(verify(_signer, claimMessage, _signature), \\\"Invalid signature\\\");\\n\\n    _safeMint(msg.sender, getTokenID(_signer));\\n    claimed[_signer] = true;\\n    uint256 refund = msg.value - claimPrice;\\n    if (refund > 0) {\\n      payable(_signer).transfer(refund);\\n    }\\n  }\\n\\n  \\n\\n  function withdraw() public {\\n    payable(withdrawAddress).transfer(address(this).balance);\\n  }\\n\\n  function _tokenURI(address _address) public view returns (string memory) {\\n    return tokenURI(getTokenID(_address));\\n  }\\n\\n  function getTokenID(address _address) public pure returns (uint256) {\\n    return uint256(uint160(_address));\\n  }\\n\\n  function getAddress(uint256 id) public pure returns (address) {\\n    return address(uint160(id));\\n  }\\n\\n  function tokenURI(uint256 id) public view override returns (string memory) {\\n    uint256[] memory layers = getAttributes(id);\\n    string memory punkSVG = generatePunkSVG(layers);\\n\\n    address userAddress = getAddress(id);\\n    string memory ensName = reverseName(userAddress);  \\n    string memory addressOrENS = bytes(ensName).length == 0 ? toString(userAddress) : ensName;\\n    \\n    string memory json = base64(bytes(abi.encodePacked('{\\\"name\\\": \\\"', 'Synthetic CryptoPunk for ', addressOrENS, '\\\", \\\"description\\\": \\\"This is a unique Punk claimed by ', addressOrENS,'.\\\", \\\"image\\\": \\\"data:image/svg+xml;base64,', base64(bytes(punkSVG)), '\\\"}')));\\n\\n    return string(abi.encodePacked('data:application/json;base64,', json));\\n  }\\n\\n  // Entropy 0\\n  function getGender(uint256 id) public view returns (Gender) {\\n    return randomUint(id, 0) % 2 == 0 ? Gender.Male : Gender.Female;\\n  }\\n\\n  // Entropy 1,2-9\\n  function getAttributeCategories(uint256 id) public view returns (uint256[] memory) {\\n    uint256[4][9] memory spritesheetRanges = assets.spritesheetRanges();\\n    uint256 checks = 2 + randomUint(id, 1) % (spritesheetRanges.length - 3); // Number of bytes to check\\n    uint256[] memory attributes = new uint256[](checks); // TODO: Check at least 1 attribute\\n    uint256 length = 0;\\n    for (uint256 i; i < checks; i++) {\\n      uint256 newAttribute = randomUint(id, 2+i) % (spritesheetRanges.length - 2) + 1; // Skip base category\\n      \\n      bool added = contains(attributes, newAttribute);\\n\\n      if (added) {\\n        continue;\\n      }\\n\\n      if (getGender(id) == Gender.Female) {\\n        if (!(spritesheetRanges[newAttribute][3] - spritesheetRanges[newAttribute][1] == 0)) {\\n          attributes[length] = newAttribute;\\n          length++;\\n        }\\n      } else {\\n        if (!(spritesheetRanges[newAttribute][2] - spritesheetRanges[newAttribute][0] == 0)) {\\n          attributes[length] = newAttribute;\\n          length++;\\n        }\\n      }\\n    }\\n\\n    uint256[] memory attributesResized = new uint256[](length+1);\\n    attributesResized[0] = 0;\\n    for (uint256 i; i < length; i++) {\\n      attributesResized[i+1] = attributes[i];\\n    }\\n\\n    return attributesResized;\\n  }\\n\\n  // Entropy 10\\n  function getAttribute(uint256 id, uint256 _attributeId) public view returns (uint256) {\\n    uint256[4] memory ranges = assets.spritesheetRanges()[_attributeId];\\n    Gender gender = getGender(id);\\n    if (gender == Gender.Female) {\\n      return ranges[1] + randomUint(id, 10+_attributeId) % (ranges[3] - ranges[1]);\\n    } else {\\n      return ranges[0] + randomUint(id, 10+_attributeId) % (ranges[2] - ranges[0]);\\n    }\\n  }\\n\\n  function _getAttributes(address _address) public view returns (uint256[] memory) {\\n    return getAttributes(getTokenID(_address));\\n  }\\n\\n  function getAttributes(uint256 id) public view returns (uint256[] memory) {\\n    uint256[] memory attributeCategories = getAttributeCategories(id);\\n    uint256[] memory layers = new uint256[](attributeCategories.length);\\n    for (uint256 i = 0; i < attributeCategories.length; i++) {\\n      layers[i] = getAttribute(id, attributeCategories[i]);\\n    }\\n    return layers;\\n  }\\n\\n  function generatePunkSVG(uint256[] memory layers) public view returns (string memory) {\\n    string memory start1 = '<svg viewBox=\\\"0 0 24 24\\\" width=\\\"1000\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" ><defs><style>#spritesheet { image-rendering: -webkit-optimize-contrast; image-rendering: crisp-edges; image-rendering: pixelated; } #punk { filter: drop-shadow(0px 0px 50px rgb(0, 255, 166, 0.7)); } svg { background : #6A9480; }</style><svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"48 0 24 24\\\"><image id=\\\"spritesheet\\\" preserveAspectRatio=\\\"xMinYMin slice\\\" href=\\\"';\\n    string memory start3 = '\\\"></image></svg></defs><svg id=\\\"punk\\\">';\\n    string memory end = '</svg></svg>';\\n    string memory layersSVG = '';\\n\\n    // Render in order\\n    for (uint256 i = 0; i < assets.spritesheetRanges().length; i++) {\\n      for (uint256 j = 0; j < layers.length; j++) {\\n        if (assets.spritesheetRanges()[i][0] <= layers[j] && layers[j] < assets.spritesheetRanges()[i][3]) { // if layer is in range\\n          // console.log(layers[j]);\\n          uint256 id = layers[j];\\n          uint256 x = (id % 24) * 24;\\n          uint256 y = (id / 24) * 24;\\n          layersSVG = string(abi.encodePacked(layersSVG, '<svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"', toString(x), ' ', toString(y), ' 24 24\\\"><use href=\\\"#spritesheet\\\"></use></svg>'));\\n          break;\\n        }\\n      }\\n    }\\n\\n    return string(abi.encodePacked(start1, assets.spritesheetImageData(), start3, layersSVG, end)) ;\\n  }\\n  \\n  function reverseName(address _address) internal view returns (string memory name) {\\n    if (address(0) == ensReverseAddress) {\\n      return name;\\n    }\\n    ReverseRecords ens = ReverseRecords(ensReverseAddress);\\n    address[] memory t = new address[](1);\\n    t[0] = _address;\\n    name = ens.getNames(t)[0];\\n  }\\n\\n  function contains(uint256[] memory arr, uint256 element) internal pure returns (bool) {\\n    for (uint256 i = 0; i < arr.length; i++) {\\n      if (arr[i] == element) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n\\n  function randomUint(uint256 seed, uint256 offset) public view returns (uint256) {\\n    require(offset < 32, \\\"Offset out of bounds\\\");\\n    bytes32 entropy = keccak256(abi.encodePacked(address(this), seed)); // TODO: Consider not including address in entropy\\n    bytes32 mask = bytes32(0xff << (offset * 8));\\n    uint256 out = uint256((entropy & mask) >> (offset * 8));\\n    return out;\\n  }\\n\\n  function toString(address account) public pure returns(string memory) {\\n    return toString(abi.encodePacked(account));\\n  }\\n\\n  function toString(bytes32 value) public pure returns(string memory) {\\n    return toString(abi.encodePacked(value));\\n  }\\n\\n  function toString(bytes memory data) public pure returns(string memory) {\\n    bytes memory alphabet = \\\"0123456789abcdef\\\";\\n\\n    bytes memory str = new bytes(2 + data.length * 2);\\n    str[0] = \\\"0\\\";\\n    str[1] = \\\"x\\\";\\n    for (uint i = 0; i < data.length; i++) {\\n        str[2+i*2] = alphabet[uint(uint8(data[i] >> 4))];\\n        str[3+i*2] = alphabet[uint(uint8(data[i] & 0x0f))];\\n    }\\n    return string(str);\\n  }\\n\\n  function toString(uint256 n) \\n      internal \\n      pure \\n      returns (string memory nstr) \\n  {\\n    uint256 MAX_UINT256_STRING_LENGTH = 78;\\n    uint8 ASCII_DIGIT_OFFSET = 48;\\n    if (n == 0) {\\n        return \\\"0\\\";\\n    }\\n    // Overallocate memory\\n    nstr = new string(MAX_UINT256_STRING_LENGTH);\\n    uint256 k = MAX_UINT256_STRING_LENGTH;\\n    // Populate string from right to left (lsb to msb).\\n    while (n != 0) {\\n      assembly {\\n        let char := add(\\n          ASCII_DIGIT_OFFSET,\\n          mod(n, 10)\\n        )\\n        mstore(add(nstr, k), char)\\n        k := sub(k, 1)\\n        n := div(n, 10)\\n      }\\n    }\\n    assembly {\\n      // Shift pointer over to actual start of string.\\n      nstr := add(nstr, k)\\n      // Store actual string length.\\n      mstore(nstr, sub(MAX_UINT256_STRING_LENGTH, k))\\n    }\\n    return nstr;\\n  }\\n\\n  /// @notice Encodes some bytes to the base64 representation\\n  function base64(bytes memory data) internal pure returns (string memory) {\\n    bytes memory TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n    uint256 len = data.length;\\n    if (len == 0) return \\\"\\\";\\n\\n    // multiply by 4/3 rounded up\\n    uint256 encodedLen = 4 * ((len + 2) / 3);\\n\\n    // Add some extra buffer at the end\\n    bytes memory result = new bytes(encodedLen + 32);\\n\\n    bytes memory table = TABLE;\\n\\n    assembly {\\n      let tablePtr := add(table, 1)\\n      let resultPtr := add(result, 32)\\n\\n      for {\\n        let i := 0\\n      } lt(i, len) {\\n\\n      } {\\n        i := add(i, 3)\\n        let input := and(mload(add(data, i)), 0xffffff)\\n\\n        let out := mload(add(tablePtr, and(shr(18, input), 0x3F)))\\n        out := shl(8, out)\\n        out := add(out, and(mload(add(tablePtr, and(shr(12, input), 0x3F))), 0xFF))\\n        out := shl(8, out)\\n        out := add(out, and(mload(add(tablePtr, and(shr(6, input), 0x3F))), 0xFF))\\n        out := shl(8, out)\\n        out := add(out, and(mload(add(tablePtr, and(input, 0x3F))), 0xFF))\\n        out := shl(224, out)\\n\\n        mstore(resultPtr, out)\\n\\n        resultPtr := add(resultPtr, 4)\\n      }\\n\\n      switch mod(len, 3)\\n      case 1 {\\n          mstore(sub(resultPtr, 2), shl(240, 0x3d3d))\\n      }\\n      case 2 {\\n          mstore(sub(resultPtr, 1), shl(248, 0x3d))\\n      }\\n\\n      mstore(result, encodedLen)\\n    }\\n\\n    return string(result);\\n  }\\n\\n  // ECDSA\\n\\n  function getMessageHash(\\n    string memory _message\\n  ) public pure returns (bytes32) {\\n    return keccak256(abi.encodePacked(_message));\\n  }\\n\\n  function getEthSignedMessageHash(bytes32 _messageHash)\\n    public\\n    pure \\n    returns (bytes32)\\n  {\\n    return\\n      keccak256(\\n        abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", _messageHash)\\n      );\\n  }\\n\\n  function verify(\\n    address _signer,\\n    string memory _message,\\n    bytes memory signature\\n  ) public pure returns (bool) {\\n    bytes32 messageHash = getMessageHash(_message);\\n    bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash);\\n\\n    return recoverSigner(ethSignedMessageHash, signature) == _signer;\\n  }\\n\\n  function recoverSigner(bytes32 _ethSignedMessageHash, bytes memory _signature)\\n    public\\n    pure\\n    returns (address)\\n  {\\n    (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature);\\n\\n    return ecrecover(_ethSignedMessageHash, v, r, s);\\n  }\\n\\n  function splitSignature(bytes memory sig)\\n    public\\n    pure\\n    returns (\\n        bytes32 r,\\n        bytes32 s,\\n        uint8 v\\n    )\\n  {\\n    require(sig.length == 65, \\\"invalid signature length\\\");\\n\\n    assembly {\\n      // first 32 bytes, after the length prefix\\n      r := mload(add(sig, 32))\\n      // second 32 bytes\\n      s := mload(add(sig, 64))\\n      // final byte (first byte of the next 32 bytes)\\n      v := byte(0, mload(add(sig, 96)))\\n    }\\n  }\\n}\",\"keccak256\":\"0x42eadb14ab2e95213c240c6d44d0aba74b2483e7a617a668c8389adfc696ecb6\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ISyntheticPunksAssets.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.0;\\n\\ninterface ISyntheticPunksAssets {\\n  function spritesheetImageData() external view returns (string memory);\\n  function spritesheetRanges() external view returns (uint256[4][9] memory);\\n  function attributesContentURI() external view returns (string memory);\\n}\",\"keccak256\":\"0x8d122d962831b0c599affa0587fb81aac33e21ccef08b36563c7db7576944c28\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60e060405266470de4df8200006080908152503480156200001f57600080fd5b50604051620060833803806200608383398181016040528101906200004591906200026e565b848481600090805190602001906200005f92919062000135565b5080600190805190602001906200007892919062000135565b50505082600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b815250505050505050620004a1565b8280546200014390620003f3565b90600052602060002090601f016020900481019282620001675760008555620001b3565b82601f106200018257805160ff1916838001178555620001b3565b82800160010185558215620001b3579182015b82811115620001b257825182559160200191906001019062000195565b5b509050620001c29190620001c6565b5090565b5b80821115620001e1576000816000905550600101620001c7565b5090565b6000620001fc620001f68462000356565b62000322565b9050828152602081018484840111156200021557600080fd5b62000222848285620003bd565b509392505050565b6000815190506200023b8162000487565b92915050565b600082601f8301126200025357600080fd5b815162000265848260208601620001e5565b91505092915050565b600080600080600060a086880312156200028757600080fd5b600086015167ffffffffffffffff811115620002a257600080fd5b620002b08882890162000241565b955050602086015167ffffffffffffffff811115620002ce57600080fd5b620002dc8882890162000241565b9450506040620002ef888289016200022a565b935050606062000302888289016200022a565b925050608062000315888289016200022a565b9150509295509295909350565b6000604051905081810181811067ffffffffffffffff821117156200034c576200034b62000458565b5b8060405250919050565b600067ffffffffffffffff82111562000374576200037362000458565b5b601f19601f8301169050602081019050919050565b600062000396826200039d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620003dd578082015181840152602081019050620003c0565b83811115620003ed576000848401525b50505050565b600060028204905060018216806200040c57607f821691505b6020821081141562000423576200042262000429565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620004928162000389565b81146200049e57600080fd5b50565b60805160a05160601c60c05160601c615b8262000501600039600081816136b60152613712015260008181610d760152611255015260008181610d9a0152818161155d0152818161162c01528181612c760152612dc40152615b826000f3fe6080604052600436106102305760003560e01c80637685945e1161012e578063b446f3b2116100ab578063d61b051b1161006f578063d61b051b14610907578063e06d2eb514610944578063e985e9c514610981578063fa540801146109be578063fe0bc600146109fb57610230565b8063b446f3b2146107ea578063b88d4fde14610827578063b93f9b0a14610850578063c87b56dd1461088d578063c884ef83146108ca57610230565b80639d4776b2116100f25780639d4776b2146106ec578063a22cb46514610708578063a7bb580314610731578063af4fb35314610770578063b11a19e8146107ad57610230565b80637685945e146105cd57806378619bdf1461060a57806385d940ec1461064757806395d89b411461068457806397aba7f9146106af57610230565b80633ccfd60b116101bc5780636352211e116101805780636352211e146104ae57806363f8071c146104eb57806370a082311461052857806371a973051461056557806371aad10d1461059057610230565b80633ccfd60b146103ea57806342842e0e146104015780634378a6e31461042a5780634e71d92d1461046757806356ca623e1461047157610230565b80631581b600116102035780631581b6001461030357806315d655c91461032e57806323b872dd146103595780632dd34f0f146103825780633b85df72146103bf57610230565b806301ffc9a71461023557806306fdde0314610272578063081812fc1461029d578063095ea7b3146102da575b600080fd5b34801561024157600080fd5b5061025c6004803603810190610257919061446c565b610a38565b604051610269919061506e565b60405180910390f35b34801561027e57600080fd5b50610287610aca565b6040516102949190615156565b60405180910390f35b3480156102a957600080fd5b506102c460048036038101906102bf9190614581565b610b58565b6040516102d19190614f79565b60405180910390f35b3480156102e657600080fd5b5061030160048036038101906102fc9190614307565b610b8b565b005b34801561030f57600080fd5b50610318610d74565b6040516103259190614f79565b60405180910390f35b34801561033a57600080fd5b50610343610d98565b6040516103509190615298565b60405180910390f35b34801561036557600080fd5b50610380600480360381019061037b919061412e565b610dbc565b005b34801561038e57600080fd5b506103a960048036038101906103a49190614288565b6111bc565b6040516103b6919061506e565b60405180910390f35b3480156103cb57600080fd5b506103d461121a565b6040516103e19190615156565b60405180910390f35b3480156103f657600080fd5b506103ff611253565b005b34801561040d57600080fd5b506104286004803603810190610423919061412e565b6112bc565b005b34801561043657600080fd5b50610451600480360381019061044c9190614581565b61141f565b60405161045e919061504c565b60405180910390f35b61046f61155b565b005b34801561047d57600080fd5b50610498600480360381019061049391906140c9565b6116ac565b6040516104a59190615156565b60405180910390f35b3480156104ba57600080fd5b506104d560048036038101906104d09190614581565b6116dd565b6040516104e29190614f79565b60405180910390f35b3480156104f757600080fd5b50610512600480360381019061050d91906140c9565b611710565b60405161051f9190615298565b60405180910390f35b34801561053457600080fd5b5061054f600480360381019061054a91906140c9565b611730565b60405161055c9190615298565b60405180910390f35b34801561057157600080fd5b5061057a611748565b6040516105879190615120565b60405180910390f35b34801561059c57600080fd5b506105b760048036038101906105b291906144be565b61176e565b6040516105c49190615156565b60405180910390f35b3480156105d957600080fd5b506105f460048036038101906105ef91906145aa565b611bbe565b6040516106019190615298565b60405180910390f35b34801561061657600080fd5b50610631600480360381019061062c91906143ae565b611f1c565b60405161063e9190615156565b60405180910390f35b34801561065357600080fd5b5061066e60048036038101906106699190614581565b6124e7565b60405161067b919061504c565b60405180910390f35b34801561069057600080fd5b50610699612b77565b6040516106a69190615156565b60405180910390f35b3480156106bb57600080fd5b506106d660048036038101906106d19190614418565b612c05565b6040516106e39190614f79565b60405180910390f35b61070660048036038101906107019190614234565b612c74565b005b34801561071457600080fd5b5061072f600480360381019061072a91906141f8565b612e46565b005b34801561073d57600080fd5b50610758600480360381019061075391906144be565b612f43565b604051610767939291906150a4565b60405180910390f35b34801561077c57600080fd5b50610797600480360381019061079291906140c9565b612fab565b6040516107a49190615156565b60405180910390f35b3480156107b957600080fd5b506107d460048036038101906107cf91906143ef565b612fc5565b6040516107e19190615156565b60405180910390f35b3480156107f657600080fd5b50610811600480360381019061080c91906144ff565b612ff6565b60405161081e9190615089565b60405180910390f35b34801561083357600080fd5b5061084e6004803603810190610849919061417d565b613026565b005b34801561085c57600080fd5b5061087760048036038101906108729190614581565b61318c565b6040516108849190614f79565b60405180910390f35b34801561089957600080fd5b506108b460048036038101906108af9190614581565b613196565b6040516108c19190615156565b60405180910390f35b3480156108d657600080fd5b506108f160048036038101906108ec91906140c9565b61324d565b6040516108fe919061506e565b60405180910390f35b34801561091357600080fd5b5061092e600480360381019061092991906145aa565b61326d565b60405161093b9190615298565b60405180910390f35b34801561095057600080fd5b5061096b60048036038101906109669190614581565b61331c565b604051610978919061513b565b60405180910390f35b34801561098d57600080fd5b506109a860048036038101906109a391906140f2565b61334c565b6040516109b5919061506e565b60405180910390f35b3480156109ca57600080fd5b506109e560048036038101906109e091906143ef565b61337b565b6040516109f29190615089565b60405180910390f35b348015610a0757600080fd5b50610a226004803603810190610a1d91906140c9565b6133ab565b604051610a2f919061504c565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a9357506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610ac35750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60008054610ad7906156c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610b03906156c8565b8015610b505780601f10610b2557610100808354040283529160200191610b50565b820191906000526020600020905b815481529060010190602001808311610b3357829003601f168201915b505050505081565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c835750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610cc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb990615258565b60405180910390fd5b826004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610e5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5490615278565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ecd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec490615198565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610f6557506004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80610ff65750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b611035576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102c90615258565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000806111c884612ff6565b905060006111d58261337b565b90508573ffffffffffffffffffffffffffffffffffffffff166111f88286612c05565b73ffffffffffffffffffffffffffffffffffffffff1614925050509392505050565b6040518060400160405280601f81526020017f4d65737361676520746f20636c61696d2053796e7468657469632050756e6b0081525081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156112b9573d6000803e3d6000fd5b50565b6112c7838383610dbc565b60008273ffffffffffffffffffffffffffffffffffffffff16803b806020016040519081016040528181526000908060200190933c5114806113db575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a023386856040518463ffffffff1660e01b815260040161136893929190614fe0565b602060405180830381600087803b15801561138257600080fd5b505af1158015611396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ba9190614495565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b61141a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611411906151d8565b60405180910390fd5b505050565b6060600061142c836124e7565b90506000815167ffffffffffffffff811115611471577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561149f5781602001602082028036833780820191505090505b50905060005b8251811015611550576114f8858483815181106114eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151611bbe565b828281518110611531577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508080611548906156fa565b9150506114a5565b508092505050919050565b7f00000000000000000000000000000000000000000000000000000000000000003410156115be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b5906151b8565b60405180910390fd5b6115d0336115cb33611710565b6133c5565b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060007f000000000000000000000000000000000000000000000000000000000000000034611656919061557e565b905060008111156116a9573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156116a7573d6000803e3d6000fd5b505b50565b60606116d6826040516020016116c29190614db3565b60405160208183030381529060405261176e565b9050919050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff169050919050565b60026020528060005260406000206000915090505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060006040518060400160405280601081526020017f303132333435363738396162636465660000000000000000000000000000000081525090506000600284516117ba9190615524565b60026117c6919061549d565b67ffffffffffffffff811115611805577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156118375781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611895577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061191f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060005b8451811015611bb357826004868381518110611996577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60f81c60ff1681518110611a02577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b82600283611a1b9190615524565b6002611a27919061549d565b81518110611a5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535082600f60f81b868381518110611acc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b1660f81c60ff1681518110611b15577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b82600283611b2e9190615524565b6003611b3a919061549d565b81518110611b71577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080611bab906156fa565b915050611951565b508092505050919050565b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a161b7c6040518163ffffffff1660e01b81526004016104806040518083038186803b158015611c2a57600080fd5b505afa158015611c3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c629190614343565b8360098110611c9a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015190506000611cac8561331c565b9050600180811115611ce7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816001811115611d20577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415611e205781600160048110611d60577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015182600360048110611d9f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151611dae919061557e565b611dc48686600a611dbf919061549d565b61326d565b611dce919061577b565b82600160048110611e08577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151611e17919061549d565b92505050611f16565b81600060048110611e5a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015182600260048110611e99577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151611ea8919061557e565b611ebe8686600a611eb9919061549d565b61326d565b611ec8919061577b565b82600060048110611f02577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151611f11919061549d565b925050505b92915050565b60606000604051806101e001604052806101aa81526020016159a36101aa91399050600060405180606001604052806026815260200161597d60269139905060006040518060400160405280600c81526020017f3c2f7376673e3c2f7376673e00000000000000000000000000000000000000008152509050600060405180602001604052806000815250905060005b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a161b7c6040518163ffffffff1660e01b81526004016104806040518083038186803b15801561201557600080fd5b505afa158015612029573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061204d9190614343565b50600981101561240f5760005b87518110156123fb5787818151811061209c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a161b7c6040518163ffffffff1660e01b81526004016104806040518083038186803b15801561210d57600080fd5b505afa158015612121573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121459190614343565b836009811061217d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516000600481106121bb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151111580156123285750600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a161b7c6040518163ffffffff1660e01b81526004016104806040518083038186803b15801561223257600080fd5b505afa158015612246573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061226a9190614343565b82600981106122a2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516003600481106122e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015188828151811061231e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151105b156123e8576000888281518110612368577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050600060188083612382919061577b565b61238c9190615524565b905060006018808461239e91906154f3565b6123a89190615524565b9050856123b483613527565b6123bd83613527565b6040516020016123cf93929190614e77565b60405160208183030381529060405295505050506123fb565b80806123f3906156fa565b91505061205a565b508080612407906156fa565b915050611fac565b5083600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166360787be36040518163ffffffff1660e01b815260040160006040518083038186803b15801561247957600080fd5b505afa15801561248d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906124b69190614540565b8483856040516020016124cd959493929190614e2c565b604051602081830303815290604052945050505050919050565b60606000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a161b7c6040518163ffffffff1660e01b81526004016104806040518083038186803b15801561255457600080fd5b505afa158015612568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061258c9190614343565b905060006003600961259e919061557e565b6125a985600161326d565b6125b3919061577b565b60026125bf919061549d565b905060008167ffffffffffffffff811115612603577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156126315781602001602082028036833780820191505090505b5090506000805b838110156129f1576000600160026009612652919061557e565b6126688a856002612663919061549d565b61326d565b612672919061577b565b61267c919061549d565b9050600061268a8583613630565b905080156126995750506129de565b6001808111156126d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6126db8a61331c565b6001811115612713577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561287c576000878360098110612754577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151600160048110612792577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518884600981106127d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015160036004811061280e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015161281d919061557e565b14612877578185858151811061285c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508380612873906156fa565b9450505b6129db565b60008783600981106128b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516000600481106128f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151888460098110612933577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151600260048110612971577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151612980919061557e565b146129da57818585815181106129bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505083806129d6906156fa565b9450505b5b50505b80806129e9906156fa565b915050612638565b506000600182612a01919061549d565b67ffffffffffffffff811115612a40577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015612a6e5781602001602082028036833780820191505090505b509050600081600081518110612aad577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505060005b82811015612b6957838181518110612afd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015182600183612b13919061549d565b81518110612b4a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508080612b61906156fa565b915050612abc565b508095505050505050919050565b60018054612b84906156c8565b80601f0160208091040260200160405190810160405280929190818152602001828054612bb0906156c8565b8015612bfd5780601f10612bd257610100808354040283529160200191612bfd565b820191906000526020600020905b815481529060010190602001808311612be057829003601f168201915b505050505081565b600080600080612c1485612f43565b92509250925060018682858560405160008152602001604052604051612c3d94939291906150db565b6020604051602081039080840390855afa158015612c5f573d6000803e3d6000fd5b50505060206040510351935050505092915050565b7f0000000000000000000000000000000000000000000000000000000000000000341015612cd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cce906151b8565b60405180910390fd5b612d17826040518060400160405280601f81526020017f4d65737361676520746f20636c61696d2053796e7468657469632050756e6b00815250836111bc565b612d56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d4d90615178565b60405180910390fd5b612d6833612d6384611710565b6133c5565b6001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060007f000000000000000000000000000000000000000000000000000000000000000034612dee919061557e565b90506000811115612e41578273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015612e3f573d6000803e3d6000fd5b505b505050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051612f37919061506e565b60405180910390a35050565b60008060006041845114612f8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f8390615218565b60405180910390fd5b6020840151925060408401519150606084015160001a90509193909250565b6060612fbe612fb983611710565b613196565b9050919050565b6060612fef82604051602001612fdb9190614dfa565b60405160208183030381529060405261176e565b9050919050565b6000816040516020016130099190614e15565b604051602081830303815290604052805190602001209050919050565b613031848484610dbc565b60008373ffffffffffffffffffffffffffffffffffffffff16803b806020016040519081016040528181526000908060200190933c511480613147575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168373ffffffffffffffffffffffffffffffffffffffff1663150b7a02338786866040518563ffffffff1660e01b81526004016130d49493929190614f94565b602060405180830381600087803b1580156130ee57600080fd5b505af1158015613102573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131269190614495565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b613186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161317d906151d8565b60405180910390fd5b50505050565b6000819050919050565b606060006131a38361141f565b905060006131b082611f1c565b905060006131bd8561318c565b905060006131ca826136b2565b90506000808251146131dc57816131e6565b6131e5836116ac565b5b9050600061321e82836131f8886138f5565b60405160200161320a93929190614eef565b6040516020818303038152906040526138f5565b9050806040516020016132319190614f57565b6040516020818303038152906040529650505050505050919050565b60076020528060005260406000206000915054906101000a900460ff1681565b6000602082106132b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016132a9906151f8565b60405180910390fd5b600030846040516020016132c7929190614dce565b60405160208183030381529060405280519060200120905060006008846132ee9190615524565b60ff901b60001b905060006008856133069190615524565b828416901c60001c905080935050505092915050565b600080600261332c84600061326d565b613336919061577b565b14613342576001613345565b60005b9050919050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60008160405160200161338e9190614ec9565b604051602081830303815290604052805190602001209050919050565b60606133be6133b983611710565b61141f565b9050919050565b6133cf8282613aba565b60008273ffffffffffffffffffffffffffffffffffffffff16803b806020016040519081016040528181526000908060200190933c5114806134e4575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a02336000856040518463ffffffff1660e01b815260040161347193929190614fe0565b602060405180830381600087803b15801561348b57600080fd5b505af115801561349f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134c39190614495565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b613523576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161351a906151d8565b60405180910390fd5b5050565b60606000604e9050600060309050600084141561357d576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509250505061362b565b8167ffffffffffffffff8111156135bd577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156135ef5781602001600182028036833780820191505090505b50925060008290505b6000851461361d57600a850682018082860152600182039150600a86049550506135f8565b808401935080830384525050505b919050565b600080600090505b83518110156136a6578284828151811061367b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015114156136935760019150506136ac565b808061369e906156fa565b915050613638565b50600090505b92915050565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff16141561370e576138f0565b60007f000000000000000000000000000000000000000000000000000000000000000090506000600167ffffffffffffffff811115613776577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156137a45781602001602082028036833780820191505090505b50905083816000815181106137e2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1663cbf8b66c826040518263ffffffff1660e01b8152600401613855919061502a565b60006040518083038186803b15801561386d57600080fd5b505afa158015613881573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906138aa919061436d565b6000815181106138e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151925050505b919050565b6060600060405180606001604052806040815260200161593d604091399050600083519050600081141561393c576040518060200160405280600081525092505050613ab5565b6000600360028361394d919061549d565b61395791906154f3565b60046139639190615524565b90506000602082613974919061549d565b67ffffffffffffffff8111156139b3577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156139e55781602001600182028036833780820191505090505b5090506000849050600181016020830160005b86811015613a715760038101905062ffffff818b015116603f8160121c168401518060081b905060ff603f83600c1c1686015116810190508060081b905060ff603f8360061c1686015116810190508060081b905060ff603f831686015116810190508060e01b905080845260048401935050506139f8565b506003860660018114613a8b5760028114613a9b57613aa6565b613d3d60f01b6002830352613aa6565b603d60f81b60018303525b50848452505081955050505050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613b2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613b2190615198565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613bcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613bc390615238565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000613ce0613cdb846152e4565b6152b3565b90508082856080860282011115613cf657600080fd5b60005b85811015613d265781613d0c8882613f7c565b845260208401935060808301925050600181019050613cf9565b5050509392505050565b6000613d43613d3e8461530a565b6152b3565b9050808382526020820190508260005b85811015613d835781518501613d698882614075565b845260208401935060208301925050600181019050613d53565b5050509392505050565b6000613da0613d9b84615336565b6152b3565b90508082856020860282011115613db657600080fd5b60005b85811015613de65781613dcc88826140b4565b845260208401935060208301925050600181019050613db9565b5050509392505050565b6000613e03613dfe8461535c565b6152b3565b90508083825260208201905082856020860282011115613e2257600080fd5b60005b85811015613e525781613e38888261409f565b845260208401935060208301925050600181019050613e25565b5050509392505050565b6000613e6f613e6a84615388565b6152b3565b905082815260208101848484011115613e8757600080fd5b613e92848285615686565b509392505050565b6000613ead613ea8846153b8565b6152b3565b905082815260208101848484011115613ec557600080fd5b613ed0848285615686565b509392505050565b6000613eeb613ee6846153b8565b6152b3565b905082815260208101848484011115613f0357600080fd5b613f0e848285615695565b509392505050565b600081359050613f25816158c9565b92915050565b600082601f830112613f3c57600080fd5b6009613f49848285613ccd565b91505092915050565b600082601f830112613f6357600080fd5b8151613f73848260208601613d30565b91505092915050565b600082601f830112613f8d57600080fd5b6004613f9a848285613d8d565b91505092915050565b600082601f830112613fb457600080fd5b8135613fc4848260208601613df0565b91505092915050565b600081359050613fdc816158e0565b92915050565b600081359050613ff1816158f7565b92915050565b6000813590506140068161590e565b92915050565b60008151905061401b8161590e565b92915050565b600082601f83011261403257600080fd5b8135614042848260208601613e5c565b91505092915050565b600082601f83011261405c57600080fd5b813561406c848260208601613e9a565b91505092915050565b600082601f83011261408657600080fd5b8151614096848260208601613ed8565b91505092915050565b6000813590506140ae81615925565b92915050565b6000815190506140c381615925565b92915050565b6000602082840312156140db57600080fd5b60006140e984828501613f16565b91505092915050565b6000806040838503121561410557600080fd5b600061411385828601613f16565b925050602061412485828601613f16565b9150509250929050565b60008060006060848603121561414357600080fd5b600061415186828701613f16565b935050602061416286828701613f16565b92505060406141738682870161409f565b9150509250925092565b6000806000806080858703121561419357600080fd5b60006141a187828801613f16565b94505060206141b287828801613f16565b93505060406141c38782880161409f565b925050606085013567ffffffffffffffff8111156141e057600080fd5b6141ec87828801614021565b91505092959194509250565b6000806040838503121561420b57600080fd5b600061421985828601613f16565b925050602061422a85828601613fcd565b9150509250929050565b6000806040838503121561424757600080fd5b600061425585828601613f16565b925050602083013567ffffffffffffffff81111561427257600080fd5b61427e85828601614021565b9150509250929050565b60008060006060848603121561429d57600080fd5b60006142ab86828701613f16565b935050602084013567ffffffffffffffff8111156142c857600080fd5b6142d48682870161404b565b925050604084013567ffffffffffffffff8111156142f157600080fd5b6142fd86828701614021565b9150509250925092565b6000806040838503121561431a57600080fd5b600061432885828601613f16565b92505060206143398582860161409f565b9150509250929050565b6000610480828403121561435657600080fd5b600061436484828501613f2b565b91505092915050565b60006020828403121561437f57600080fd5b600082015167ffffffffffffffff81111561439957600080fd5b6143a584828501613f52565b91505092915050565b6000602082840312156143c057600080fd5b600082013567ffffffffffffffff8111156143da57600080fd5b6143e684828501613fa3565b91505092915050565b60006020828403121561440157600080fd5b600061440f84828501613fe2565b91505092915050565b6000806040838503121561442b57600080fd5b600061443985828601613fe2565b925050602083013567ffffffffffffffff81111561445657600080fd5b61446285828601614021565b9150509250929050565b60006020828403121561447e57600080fd5b600061448c84828501613ff7565b91505092915050565b6000602082840312156144a757600080fd5b60006144b58482850161400c565b91505092915050565b6000602082840312156144d057600080fd5b600082013567ffffffffffffffff8111156144ea57600080fd5b6144f684828501614021565b91505092915050565b60006020828403121561451157600080fd5b600082013567ffffffffffffffff81111561452b57600080fd5b6145378482850161404b565b91505092915050565b60006020828403121561455257600080fd5b600082015167ffffffffffffffff81111561456c57600080fd5b61457884828501614075565b91505092915050565b60006020828403121561459357600080fd5b60006145a18482850161409f565b91505092915050565b600080604083850312156145bd57600080fd5b60006145cb8582860161409f565b92505060206145dc8582860161409f565b9150509250929050565b60006145f28383614616565b60208301905092915050565b600061460a8383614d6f565b60208301905092915050565b61461f816155b2565b82525050565b61462e816155b2565b82525050565b614645614640826155b2565b615743565b82525050565b600061465682615408565b614660818561544e565b935061466b836153e8565b8060005b8381101561469c57815161468388826145e6565b975061468e83615434565b92505060018101905061466f565b5085935050505092915050565b60006146b482615413565b6146be818561545f565b93506146c9836153f8565b8060005b838110156146fa5781516146e188826145fe565b97506146ec83615441565b9250506001810190506146cd565b5085935050505092915050565b614710816155c4565b82525050565b61471f816155d0565b82525050565b614736614731826155d0565b615755565b82525050565b60006147478261541e565b6147518185615470565b9350614761818560208601615695565b61476a81615897565b840191505092915050565b61477e81615650565b82525050565b61478d81615674565b82525050565b600061479e82615429565b6147a88185615481565b93506147b8818560208601615695565b6147c181615897565b840191505092915050565b60006147d782615429565b6147e18185615492565b93506147f1818560208601615695565b80840191505092915050565b600061480a601c83615492565b91507f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000830152601c82019050919050565b600061484a601183615481565b91507f496e76616c6964207369676e61747572650000000000000000000000000000006000830152602082019050919050565b600061488a602583615492565b91507f3c7376672077696474683d22323422206865696768743d22323422207669657760008301527f426f783d220000000000000000000000000000000000000000000000000000006020830152602582019050919050565b60006148f0601983615492565b91507f53796e7468657469632043727970746f50756e6b20666f7220000000000000006000830152601982019050919050565b6000614930601183615481565b91507f494e56414c49445f524543495049454e540000000000000000000000000000006000830152602082019050919050565b6000614970600183615492565b91507f20000000000000000000000000000000000000000000000000000000000000006000830152600182019050919050565b60006149b0600283615492565b91507f227d0000000000000000000000000000000000000000000000000000000000006000830152600282019050919050565b60006149f0601483615481565b91507f496e73756666696369656e74207061796d656e740000000000000000000000006000830152602082019050919050565b6000614a30603483615492565b91507f222c20226465736372697074696f6e223a202254686973206973206120756e6960008301527f7175652050756e6b20636c61696d6564206279200000000000000000000000006020830152603482019050919050565b6000614a96601083615481565b91507f554e534146455f524543495049454e54000000000000000000000000000000006000830152602082019050919050565b6000614ad6600a83615492565b91507f7b226e616d65223a2022000000000000000000000000000000000000000000006000830152600a82019050919050565b6000614b16602883615492565b91507f2e222c2022696d616765223a2022646174613a696d6167652f7376672b786d6c60008301527f3b6261736536342c0000000000000000000000000000000000000000000000006020830152602882019050919050565b6000614b7c601d83615492565b91507f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000006000830152601d82019050919050565b6000614bbc601483615481565b91507f4f6666736574206f7574206f6620626f756e64730000000000000000000000006000830152602082019050919050565b6000614bfc600083615470565b9150600082019050919050565b6000614c16602d83615492565b91507f203234203234223e3c75736520687265663d222373707269746573686565742260008301527f3e3c2f7573653e3c2f7376673e000000000000000000000000000000000000006020830152602d82019050919050565b6000614c7c601883615481565b91507f696e76616c6964207369676e6174757265206c656e67746800000000000000006000830152602082019050919050565b6000614cbc600e83615481565b91507f414c52454144595f4d494e5445440000000000000000000000000000000000006000830152602082019050919050565b6000614cfc600e83615481565b91507f4e4f545f415554484f52495a45440000000000000000000000000000000000006000830152602082019050919050565b6000614d3c600a83615481565b91507f57524f4e475f46524f4d000000000000000000000000000000000000000000006000830152602082019050919050565b614d7881615639565b82525050565b614d8781615639565b82525050565b614d9e614d9982615639565b615771565b82525050565b614dad81615643565b82525050565b6000614dbf8284614634565b60148201915081905092915050565b6000614dda8285614634565b601482019150614dea8284614d8d565b6020820191508190509392505050565b6000614e068284614725565b60208201915081905092915050565b6000614e2182846147cc565b915081905092915050565b6000614e3882886147cc565b9150614e4482876147cc565b9150614e5082866147cc565b9150614e5c82856147cc565b9150614e6882846147cc565b91508190509695505050505050565b6000614e8382866147cc565b9150614e8e8261487d565b9150614e9a82856147cc565b9150614ea582614963565b9150614eb182846147cc565b9150614ebc82614c09565b9150819050949350505050565b6000614ed4826147fd565b9150614ee08284614725565b60208201915081905092915050565b6000614efa82614ac9565b9150614f05826148e3565b9150614f1182866147cc565b9150614f1c82614a23565b9150614f2882856147cc565b9150614f3382614b09565b9150614f3f82846147cc565b9150614f4a826149a3565b9150819050949350505050565b6000614f6282614b6f565b9150614f6e82846147cc565b915081905092915050565b6000602082019050614f8e6000830184614625565b92915050565b6000608082019050614fa96000830187614625565b614fb66020830186614625565b614fc36040830185614d7e565b8181036060830152614fd5818461473c565b905095945050505050565b6000608082019050614ff56000830186614625565b6150026020830185614625565b61500f6040830184614d7e565b818103606083015261502081614bef565b9050949350505050565b60006020820190508181036000830152615044818461464b565b905092915050565b6000602082019050818103600083015261506681846146a9565b905092915050565b60006020820190506150836000830184614707565b92915050565b600060208201905061509e6000830184614716565b92915050565b60006060820190506150b96000830186614716565b6150c66020830185614716565b6150d36040830184614da4565b949350505050565b60006080820190506150f06000830187614716565b6150fd6020830186614da4565b61510a6040830185614716565b6151176060830184614716565b95945050505050565b60006020820190506151356000830184614775565b92915050565b60006020820190506151506000830184614784565b92915050565b600060208201905081810360008301526151708184614793565b905092915050565b600060208201905081810360008301526151918161483d565b9050919050565b600060208201905081810360008301526151b181614923565b9050919050565b600060208201905081810360008301526151d1816149e3565b9050919050565b600060208201905081810360008301526151f181614a89565b9050919050565b6000602082019050818103600083015261521181614baf565b9050919050565b6000602082019050818103600083015261523181614c6f565b9050919050565b6000602082019050818103600083015261525181614caf565b9050919050565b6000602082019050818103600083015261527181614cef565b9050919050565b6000602082019050818103600083015261529181614d2f565b9050919050565b60006020820190506152ad6000830184614d7e565b92915050565b6000604051905081810181811067ffffffffffffffff821117156152da576152d9615868565b5b8060405250919050565b600067ffffffffffffffff8211156152ff576152fe615868565b5b602082029050919050565b600067ffffffffffffffff82111561532557615324615868565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561535157615350615868565b5b602082029050919050565b600067ffffffffffffffff82111561537757615376615868565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156153a3576153a2615868565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156153d3576153d2615868565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006154a882615639565b91506154b383615639565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156154e8576154e76157ac565b5b828201905092915050565b60006154fe82615639565b915061550983615639565b925082615519576155186157db565b5b828204905092915050565b600061552f82615639565b915061553a83615639565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615615573576155726157ac565b5b828202905092915050565b600061558982615639565b915061559483615639565b9250828210156155a7576155a66157ac565b5b828203905092915050565b60006155bd82615619565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050615614826158b5565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061565b82615662565b9050919050565b600061566d82615619565b9050919050565b600061567f82615606565b9050919050565b82818337600083830152505050565b60005b838110156156b3578082015181840152602081019050615698565b838111156156c2576000848401525b50505050565b600060028204905060018216806156e057607f821691505b602082108114156156f4576156f3615839565b5b50919050565b600061570582615639565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415615738576157376157ac565b5b600182019050919050565b600061574e8261575f565b9050919050565b6000819050919050565b600061576a826158a8565b9050919050565b6000819050919050565b600061578682615639565b915061579183615639565b9250826157a1576157a06157db565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b600281106158c6576158c561580a565b5b50565b6158d2816155b2565b81146158dd57600080fd5b50565b6158e9816155c4565b81146158f457600080fd5b50565b615900816155d0565b811461590b57600080fd5b50565b615917816155da565b811461592257600080fd5b50565b61592e81615639565b811461593957600080fd5b5056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f223e3c2f696d6167653e3c2f7376673e3c2f646566733e3c7376672069643d2270756e6b223e3c7376672076696577426f783d22302030203234203234222077696474683d22313030302220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f73766722203e3c646566733e3c7374796c653e237370726974657368656574207b20696d6167652d72656e646572696e673a202d7765626b69742d6f7074696d697a652d636f6e74726173743b20696d6167652d72656e646572696e673a2063726973702d65646765733b20696d6167652d72656e646572696e673a20706978656c617465643b207d202370756e6b207b2066696c7465723a2064726f702d736861646f77283070782030707820353070782072676228302c203235352c203136362c20302e3729293b207d20737667207b206261636b67726f756e64203a20233641393438303b207d3c2f7374796c653e3c7376672077696474683d22323422206865696768743d223234222076696577426f783d2234382030203234203234223e3c696d6167652069643d22737072697465736865657422207072657365727665417370656374526174696f3d22784d696e594d696e20736c6963652220687265663d22a264697066735822122041345ce45d45e4e624735763a9a4a153f56393b80a2f741f6af452755d126c3164736f6c63430008000033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 28,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 30,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 41,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "balanceOf",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 45,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "ownerOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 49,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "getApproved",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 55,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "isApprovedForAll",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 534,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "assets",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(ISyntheticPunksAssets)1892"
      },
      {
        "astId": 548,
        "contract": "contracts/SyntheticPunks.sol:SyntheticPunks",
        "label": "claimed",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ISyntheticPunksAssets)1892": {
        "encoding": "inplace",
        "label": "contract ISyntheticPunksAssets",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}